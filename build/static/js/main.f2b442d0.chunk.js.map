{"version":3,"sources":["components/SideBarMain/SideNavMain.module.css","pages/App/TextChat/TextChat.module.css","pages/App/About/About.module.css","pages/Auth/Login.module.css","pages/App/AppGrid/AppGrid.module.css","components/ChannelContainer/ChannelContainer.module.css","components/SideNavChannel/SideNavChannel.module.css","components/ChannelListCustom/ChannelListCustom.module.css","pages/Auth/Register.module.css","components/LogoutModal/LogoutModal.module.css","pages/App/Profile/Profile.module.css","components/ChannelInner/ChannelInner.module.css","components/UserList/UserList.module.css","constants/userConstants.js","store/userSlice.js","pages/Auth/images/thapar_icon.jpg","pages/Auth/Login.js","pages/Auth/Register.js","pages/Auth/Request.js","store/pageSlice.js","components/SideBarMain/SideNavMain.js","components/ChannelListCustom/ChannelListCustom.js","components/ChannelListPreview/ChannelListPreview.js","components/UserList/UserList.js","components/ChannelCreateEdit/ChannelCreateEdit.js","components/SideNavChannel/SideNavChannel.js","components/LogoutModal/LogoutModal.js","components/ChannelInner/ChannelInner.js","components/ChannelContainer/ChannelContainer.js","pages/App/TextChat/TextChat.js","pages/App/About/About.js","pages/App/Profile/Profile.js","pages/App/AppGrid/AppGrid.js","App.js","store/index.js","index.js"],"names":["module","exports","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","userSlice","createSlice","name","initialState","loading","userInfo","error","reducers","userLogin","state","action","payload","type","userRegister","userActions","actions","Login","useState","errorMessage","setErrorMessage","errorPresent","setErrorPresent","navigate","useNavigate","dispatch","useDispatch","useSelector","email","password","user","setUser","useEffect","userInfoStorage","localStorage","getItem","handleSubmission","e","a","preventDefault","config","headers","axios","post","data","setItem","JSON","stringify","errorVal","response","message","Fragment","class","styles","align","grid","src","ThaparIcon","alt","className","college_icon","onSubmit","form","login","form__field","for","login__username","Input","autocomplete","id","form__input","placeholder","onChange","required","login__password","Button","color","appearance","Login_btn","text__left","to","showIcon","hidden","Register","repassword","Request","selectedImage","setSelectedImage","imageUrl","setImageUrl","URL","createObjectURL","accept","style","display","target","files","htmlFor","variant","component","mt","textAlign","height","pageSlice","page","togglePage","pageActions","CustomNav","active","onSelect","props","Nav","vertical","activeKey","Item","iconsShell","eventKey","icon","icons","iconHome","SideNavMain","React","setActive","reversed","ChannelListCustom","children","ChannelListPreview","setActiveChannel","channel","useChatContext","client","ChannelPreview","Dropdown","DirectPreview","members","Object","values","filter","userID","Grid","Row","Col","Avatar","image","size","onClick","console","log","ListContainer","user_list__container","user_list__header","UserItem","setSelectedUsers","selected","setSelected","user_item__wrapper","prevUsers","prevUser","prevSelected","user_item__name_wrapper","fullName","user_item__name","user_item__invite_empty","UserList","users","setUsers","setLoading","listEmpty","setListEmpty","setError","getUsers","queryUsers","$ne","limit","length","user_list__message","map","i","index","Textarea","forwardRef","ref","as","ChannelCreateEdit","Modal","open","newChannelOpen","onClose","handleNewChannelClose","Header","Title","Body","Form","fluid","setChannelFormValue","formValue","channelFormValue","Group","controlId","channelNameChangeHandler","ControlLabel","Control","HelpText","channelDescChangeHandler","rows","accepter","Footer","handleNewChannelSubmission","customChannelTeamFilter","channels","customChannelMessagingFilter","SideNavChannel","setNewChannelOpen","channelName","channelDescription","channelSearchTerm","setChannelSearchTerm","channelType","setChannelType","selectedUsers","filters","$in","query","setQuery","setTeamChannels","setDirectChannels","description","newChannel","watch","channelSearchHandler","channelResponse","queryChannels","$autocomplete","userResponse","Promise","all","Sidenav","defaultOpenKeys","paddingTop","channelListHead","lg","title","ChannelList","channelRenderFilterFn","List","listProps","Preview","previewProps","addButton","value","channelSearchInputHandler","LogoutModal","logout_modal","logoutModalOpen","handleLogoutClose","handleLogoutSubmission","GiphyContext","createContext","TeamChannelHeader","watchers","useChannelStateContext","watcher_count","MessagingHeader","additionalMembers","team_channel_header__name_multi","team_channel_header__name","setLogoutModalOpen","team_channel_header__container","team_channel_header__channel_wrapper","team_channel_header__right","removeItem","window","location","reload","ChannelInner","giphyState","setGiphyState","sendMessage","useChannelActionContext","Provider","width","Window","MessageList","MessageInput","overrideSubmitHandler","updatedMessage","attachments","mentioned_users","parent_id","parent","text","Thread","ChannelContainer","channel__container","Channel","EmptyStateIndicator","channel_empty__container","channel_empty__first","channel_empty__second","Message","messageProps","MessageTeam","StreamChat","getInstance","process","parse","streamToken","stream_token","connectUser","_id","TextChat","Chat","theme","heightExpand","connectionMain","heightExpandChats","About","Profile","successPresent","setSuccessPresent","AppGrid","pageInfo","sidemain","App","CustomProvider","exact","path","element","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2b442d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons\":\"SideNavMain_icons__2LVzK\",\"iconHome\":\"SideNavMain_iconHome__1kj6b\",\"iconsShell\":\"SideNavMain_iconsShell__1IOZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heightExpand\":\"TextChat_heightExpand__3MKmZ\",\"gridformat\":\"TextChat_gridformat__EOsDz\",\"heightExpandChats\":\"TextChat_heightExpandChats__NLREp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"About_align__1Dr4L\",\"grid\":\"About_grid__1xIgM\",\"hidden\":\"About_hidden__1g3NU\",\"form\":\"About_form__2bhnC\",\"form__input\":\"About_form__input__2kj0P\",\"text__left\":\"About_text__left__3ETrP\",\"Login_btn\":\"About_Login_btn__1O896\",\"college_icon\":\"About_college_icon__33U95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"Login_align__3YR6F\",\"grid\":\"Login_grid__2jJyU\",\"hidden\":\"Login_hidden__RbZG0\",\"form\":\"Login_form__3HwUO\",\"form__field\":\"Login_form__field__3pk-n\",\"form__input\":\"Login_form__input__mvmS7\",\"login\":\"Login_login__13Uv8\",\"text__left\":\"Login_text__left__2fDR6\",\"Login_btn\":\"Login_Login_btn__3iAc0\",\"college_icon\":\"Login_college_icon__3qYvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridformat\":\"AppGrid_gridformat__1LnZJ\",\"heightExpand\":\"AppGrid_heightExpand__2vQMC\",\"heightExpandChats\":\"AppGrid_heightExpandChats__3XrSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"channel_empty__container\":\"ChannelContainer_channel_empty__container__IMcCj\",\"channel_empty__first\":\"ChannelContainer_channel_empty__first__3LgIK\",\"channel_empty__user-name\":\"ChannelContainer_channel_empty__user-name__2dEwz\",\"channel_empty__second\":\"ChannelContainer_channel_empty__second__2nXNh\",\"channel__container\":\"ChannelContainer_channel__container__1c5S6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"channelListHead\":\"SideNavChannel_channelListHead__UY6qM\",\"addButton\":\"SideNavChannel_addButton__1HNbg\",\"searchButton\":\"SideNavChannel_searchButton__1FPYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"ChannelListCustom_loading__WA9ZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"Register_align__3LS2s\",\"grid\":\"Register_grid__JuKu1\",\"hidden\":\"Register_hidden__1qz8X\",\"form\":\"Register_form__2HsqM\",\"form__field\":\"Register_form__field__QWX3o\",\"form__input\":\"Register_form__input__2P7GN\",\"login\":\"Register_login__3hLXS\",\"text__left\":\"Register_text__left__3EXn_\",\"Login_btn\":\"Register_Login_btn__1bq8X\",\"college_icon\":\"Register_college_icon__1LEds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout_modal\":\"LogoutModal_logout_modal__3ylHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"Profile_align__1eF7o\",\"grid\":\"Profile_grid__2j8k-\",\"hidden\":\"Profile_hidden__2r1R7\",\"form\":\"Profile_form__2gsxx\",\"form__field\":\"Profile_form__field__cQeEA\",\"form__input\":\"Profile_form__input__3BRGN\",\"login\":\"Profile_login__2w50F\",\"text__left\":\"Profile_text__left__3Zacv\",\"Login_btn\":\"Profile_Login_btn__1XHvv\",\"college_icon\":\"Profile_college_icon__3MyCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"team_channel_header__container\":\"ChannelInner_team_channel_header__container__3Gmzc\",\"team_channel_header__channel_wrapper\":\"ChannelInner_team_channel_header__channel_wrapper__l7i_H\",\"team_channel_header__name\":\"ChannelInner_team_channel_header__name__2u6j5\",\"team_channel_header__name_wrapper\":\"ChannelInner_team_channel_header__name_wrapper__1aUnq\",\"team_channel_header__name_multi\":\"ChannelInner_team_channel_header__name_multi__-Vcbt\",\"str-chat__avatar\":\"ChannelInner_str-chat__avatar__zAeE1\",\"user\":\"ChannelInner_user__1E5Co\",\"team_channel_header__right\":\"ChannelInner_team_channel_header__right__X8U-l\",\"team_channel_header__right-pin-wrapper\":\"ChannelInner_team_channel_header__right-pin-wrapper__2PLGQ\",\"team_channel_header__right-text\":\"ChannelInner_team_channel_header__right-text__2zAvl\",\"team_channel_list\":\"ChannelInner_team_channel_list__1WqwG\",\"team_channel_list__message\":\"ChannelInner_team_channel_list__message__78XDG\",\"loading\":\"ChannelInner_loading__1Nhcx\",\"team_channel_list__header\":\"ChannelInner_team_channel_list__header__P-qhu\",\"team_channel_list__header__title\":\"ChannelInner_team_channel_list__header__title__26CJj\",\"watcher_count\":\"ChannelInner_watcher_count__2Au9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_list__message\":\"UserList_user_list__message__2t2AX\",\"user_item__wrapper\":\"UserList_user_item__wrapper__2QNRk\",\"user_item__name_wrapper\":\"UserList_user_item__name_wrapper__Gny15\",\"user_item__name\":\"UserList_user_item__name__1n5xl\",\"user_item__last_active\":\"UserList_user_item__last_active__3p576\",\"user_item__invite_empty\":\"UserList_user_item__invite_empty__2VDZF\",\"user_list__container\":\"UserList_user_list__container__1q9v9\",\"user_list__header\":\"UserList_user_list__header__zKrCH\"};","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n} from \"../constants/userConstants\";\n\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    loading: false,\n    userInfo: null,\n    error: null,\n  },\n  reducers: {\n    userLogin(state, action) {\n      switch (action.payload.type) {\n        case USER_LOGIN_REQUEST:\n          state.loading = true;\n          break;\n        case USER_LOGIN_SUCCESS:\n          state.loading = false;\n          state.userInfo = action.payload.payload;\n          break;\n        case USER_LOGIN_FAIL:\n          state.loading = false;\n          state.error = action.payload.payload;\n          break;\n        case USER_LOGOUT:\n          state.userInfo = null;\n          break;\n        default:\n          state.loading = false;\n          state.userInfo = null;\n          state.error = null;\n      }\n    },\n    userRegister(state, action) {\n      switch (action.payload.type) {\n        case USER_REGISTER_REQUEST:\n          state.loading = true;\n          break;\n        case USER_REGISTER_SUCCESS:\n          state.loading = false;\n          state.userInfo = action.payload.payload;\n          break;\n        case USER_REGISTER_FAIL:\n          state.loading = false;\n          state.error = action.payload.payload;\n          break;\n        default:\n          state.loading = false;\n          state.userInfo = {};\n          state.error = \"\";\n      }\n    },\n  },\n});\n\nexport const userActions = userSlice.actions;\nexport default userSlice;\n","export default __webpack_public_path__ + \"static/media/thapar_icon.675a74eb.jpg\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, Message } from \"rsuite\";\nimport EmailIcon from \"@rsuite/icons/Email\";\nimport TagLockIcon from \"@rsuite/icons/TagLock\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n} from \"../../constants/userConstants\";\nimport { userActions } from \"../../store/userSlice\";\nimport styles from \"./Login.module.css\";\nimport ThaparIcon from \"./images/thapar_icon.jpg\";\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorPresent, setErrorPresent] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userSlice.userInfo);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(\"/home\");\n    }\n  }, [navigate, userInfo]);\n\n  useEffect(() => {\n    const userInfoStorage = localStorage.getItem(\"userInfo\");\n    if (userInfoStorage) {\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_SUCCESS,\n          payload: userInfoStorage,\n        })\n      );\n    }\n  }, [navigate, dispatch]);\n\n  const handleChangeEmail = (e) => {\n    setUser({\n      ...user,\n      email: e,\n    });\n  };\n\n  const handleChangePass = (e) => {\n    setUser({\n      ...user,\n      password: e,\n    });\n  };\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    setErrorPresent(false);\n    try {\n      dispatch(userActions.userLogin({ type: USER_LOGIN_REQUEST }));\n      const { email, password } = user;\n      if (email && password) {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          \"http://localhost:5000/api/user/login\",\n          { email, password },\n          config\n        );\n        dispatch(\n          userActions.userLogin({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n          })\n        );\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      } else {\n        setErrorMessage(\"Incorrect Inputs!\");\n      }\n    } catch (error) {\n      const errorVal =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_FAIL,\n          payload: errorVal,\n        })\n      );\n      setErrorMessage(errorVal);\n      setErrorPresent(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div class={`${styles.align}`}>\n        <div class={`${styles.grid}`}>\n          <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n          <form\n            onSubmit={handleSubmission}\n            class={`${styles.form} ${styles.login}`}\n          >\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"email\"\n                class={styles.form__input}\n                placeholder=\"Email\"\n                onChange={handleChangeEmail}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__password}>\n                <TagLockIcon />\n              </label>\n              <Input\n                id={styles.login__password}\n                type=\"password\"\n                name=\"password\"\n                class={styles.form__input}\n                placeholder=\"Password\"\n                onChange={handleChangePass}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <Button\n                color=\"blue\"\n                appearance=\"primary\"\n                className={styles.Login_btn}\n                type=\"submit\"\n              >\n                Login\n              </Button>\n            </div>\n          </form>\n          <br />\n          <p class={`${styles.text__left}`}>\n            New Member ? <Link to=\"/request\">Request Access</Link>\n          </p>\n          <br />\n          <Message showIcon type=\"error\" hidden={!errorPresent}>\n            {errorMessage}\n          </Message>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, Message } from \"rsuite\";\nimport EmailIcon from \"@rsuite/icons/Email\";\nimport TagLockIcon from \"@rsuite/icons/TagLock\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n} from \"../../constants/userConstants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../../store/userSlice\";\nimport styles from \"./Register.module.css\";\nimport ThaparIcon from \"./images/thapar_icon.jpg\";\n\nconst Register = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorPresent, setErrorPresent] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userSlice.userInfo);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    repassword: \"\",\n  });\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(\"/home\");\n    }\n  }, [navigate, userInfo]);\n\n  useEffect(() => {\n    const userInfoStorage = localStorage.getItem(\"userInfo\");\n    if (userInfoStorage) {\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_SUCCESS,\n          payload: userInfoStorage,\n        })\n      );\n    }\n  }, [navigate, dispatch]);\n\n  const handleChangeEmail = (e) => {\n    setUser({\n      ...user,\n      email: e,\n    });\n  };\n  const handleChangePass = (e) => {\n    setUser({\n      ...user,\n      password: e,\n    });\n  };\n  const handleChangeRePass = (e) => {\n    setUser({\n      ...user,\n      repassword: e,\n    });\n  };\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    setErrorPresent(false);\n    try {\n      dispatch(userActions.userRegister({ type: USER_REGISTER_REQUEST }));\n      const { email, password, repassword } = user;\n      if (email && password && repassword && password === repassword) {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          \"http://localhost:5000/api/user/register\",\n          { email, password },\n          config\n        );\n        dispatch(\n          userActions.userRegister({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n          })\n        );\n        dispatch(\n          userActions.userLogin({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n          })\n        );\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      } else {\n        setErrorPresent(true);\n        if (password !== repassword) {\n          setErrorMessage(\"Password and Confirm Password must be same!\");\n        } else {\n          setErrorMessage(\"Incorrect Inputs!\");\n        }\n      }\n    } catch (error) {\n      const errorVal =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(\n        userActions.userRegister({\n          type: USER_REGISTER_FAIL,\n          payload: errorVal,\n        })\n      );\n      setErrorMessage(errorVal);\n      setErrorPresent(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div class={`${styles.align}`}>\n        <div class={`${styles.grid}`}>\n          <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n          <form\n            onSubmit={handleSubmission}\n            class={`${styles.form} ${styles.login}`}\n          >\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"email\"\n                class={styles.form__input}\n                placeholder=\"College Email\"\n                onChange={handleChangeEmail}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__password}>\n                <TagLockIcon />\n              </label>\n              <Input\n                id={styles.login__password}\n                type=\"password\"\n                name=\"password\"\n                class={styles.form__input}\n                placeholder=\"Set Password\"\n                onChange={handleChangePass}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__password}>\n                <TagLockIcon />\n              </label>\n              <Input\n                id={styles.login__password}\n                type=\"password\"\n                name=\"repassword\"\n                class={styles.form__input}\n                placeholder=\"Confirm Password\"\n                onChange={handleChangeRePass}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <Button\n                color=\"blue\"\n                appearance=\"primary\"\n                className={styles.Login_btn}\n                type=\"submit\"\n              >\n                Register\n              </Button>\n            </div>\n          </form>\n          <br />\n          <Message showIcon type=\"error\" hidden={!errorPresent}>\n            {errorMessage}\n          </Message>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"rsuite\";\nimport EmailIcon from \"@rsuite/icons/Email\";\nimport UserInfoIcon from \"@rsuite/icons/UserInfo\";\nimport GrowthIcon from \"@rsuite/icons/Growth\";\nimport BranchIcon from \"@rsuite/icons/Branch\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Login.module.css\";\nimport ThaparIcon from \"./images/thapar_icon.jpg\";\n\nconst Request = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useEffect(() => {\n    if (selectedImage) {\n      setImageUrl(URL.createObjectURL(selectedImage));\n    }\n  }, [selectedImage]);\n\n  return (\n    <React.Fragment>\n      <div class={`${styles.align}`}>\n        <div class={`${styles.grid}`}>\n          <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n          <form class={`${styles.form} ${styles.login}`}>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <UserInfoIcon />\n              </label>\n              <Input\n                autocomplete=\"name\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"name\"\n                class={styles.form__input}\n                placeholder=\"Full Name\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"college_email\"\n                class={styles.form__input}\n                placeholder=\"College Email\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"primary_email\"\n                class={styles.form__input}\n                placeholder=\"Primary Email\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <GrowthIcon />\n              </label>\n              <Input\n                autocomplete=\"year\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"batch\"\n                class={styles.form__input}\n                placeholder=\"Batch (eg. 2022)\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <BranchIcon />\n              </label>\n              <Input\n                autocomplete=\"year\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"branch\"\n                class={styles.form__input}\n                placeholder=\"Branch (eg. Computer Engineering)\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <>\n                <input\n                  accept=\"image/*\"\n                  type=\"file\"\n                  id=\"select-image\"\n                  style={{ display: \"none\" }}\n                  onChange={(e) => setSelectedImage(e.target.files[0])}\n                />\n                <label htmlFor=\"select-image\">\n                  <div variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload College ID Card\n                  </div>\n                </label>\n                {imageUrl && selectedImage && (\n                  <div mt={2} textAlign=\"center\">\n                    <img\n                      src={imageUrl}\n                      alt={selectedImage.name}\n                      height=\"100px\"\n                    />\n                  </div>\n                )}\n              </>\n            </div>\n            <div class={styles.form__field}>\n              <Button\n                color=\"blue\"\n                appearance=\"primary\"\n                className={styles.Login_btn}\n              >\n                Request Access\n              </Button>\n            </div>\n          </form>\n          <br />\n          <p class={`${styles.text__left}`}>\n            Have Access ? <Link to=\"/login\">Login</Link>\n          </p>\n          <br />\n          <br />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Request;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst pageSlice = createSlice({\n  name: \"pageSlice\",\n  initialState: {\n    page: \"home\",\n  },\n  reducers: {\n    togglePage(state, action) {\n      state.page = action.payload.payload;\n    },\n  },\n});\n\nexport const pageActions = pageSlice.actions;\nexport default pageSlice;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Nav } from \"rsuite\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nimport { pageActions } from \"../../store/pageSlice\";\nimport styles from \"./SideNavMain.module.css\";\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n  return (\n    <Nav\n      {...props}\n      vertical\n      activeKey={active}\n      onSelect={onSelect}\n      style={{ height: \"100%\" }}\n    >\n      <Nav.Item\n        className={styles.iconsShell}\n        eventKey=\"home\"\n        icon={<HomeIcon className={`${styles.icons} ${styles.iconHome}`} />}\n      ></Nav.Item>\n      <Nav.Item\n        className={styles.iconsShell}\n        eventKey=\"profile\"\n        icon={<AccountCircleIcon className={styles.icons} />}\n      ></Nav.Item>\n      <Nav.Item\n        className={styles.iconsShell}\n        eventKey=\"about\"\n        icon={<InfoIcon className={styles.icons} />}\n      ></Nav.Item>\n    </Nav>\n  );\n};\n\nconst SideNavMain = () => {\n  const dispatch = useDispatch();\n  const [active, setActive] = React.useState(\"home\");\n  useEffect(() => {\n    dispatch(\n      pageActions.togglePage({\n        payload: active,\n      })\n    );\n  }, [active, dispatch]);\n\n  return (\n    <React.Fragment>\n      <CustomNav\n        appearance=\"subtle\"\n        reversed\n        active={active}\n        onSelect={setActive}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SideNavMain;\n","import React from \"react\";\nimport styles from \"./ChannelListCustom.module.css\";\n\nconst ChannelListCustom = ({ children, error = false, loading, type }) => {\n  if (error) {\n    return (\n      <div className={styles.loading}>Connection Error! Please try again!</div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className={styles.loading}>\n        {type === \"team\" ? \"Channels \" : \"Messages\"} loading....\n      </div>\n    );\n  }\n\n  return <React.Fragment>{children}</React.Fragment>;\n};\n\nexport default ChannelListCustom;\n","import React from \"react\";\nimport { Avatar, useChatContext } from \"stream-chat-react\";\nimport { Dropdown, Grid, Row, Col } from \"rsuite\";\n\nconst ChannelListPreview = ({ setActiveChannel, channel, type }) => {\n  const { channel: activeChannel, client } = useChatContext();\n\n  const ChannelPreview = () => (\n    <Dropdown.Item eventKey={channel?.data?.id} key={channel?.data?.id}>\n      # {channel?.data?.name || channel?.data?.id}\n    </Dropdown.Item>\n  );\n\n  const DirectPreview = () => {\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID\n    );\n\n    return (\n      <Dropdown.Item eventKey={members[0]?.user?.id} key={members[0]?.user?.id}>\n        <Grid>\n          <Row>\n            <Col>\n              <Avatar\n                image={members[0]?.user?.image}\n                name={members[0]?.user?.email}\n                size={24}\n              />\n            </Col>\n            <Col>\n              <p>{members[0]?.user?.email}</p>\n            </Col>\n          </Row>\n        </Grid>\n      </Dropdown.Item>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        onClick={() => {\n          console.log(channel);\n          setActiveChannel(channel);\n        }}\n      >\n        {type === \"team\" ? <ChannelPreview /> : <DirectPreview />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ChannelListPreview;\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar, useChatContext } from \"stream-chat-react\";\nimport WavePointIcon from \"@rsuite/icons/WavePoint\";\n// import \"./UserList.css\";\nimport styles from \"./UserList.module.css\";\n\nconst ListContainer = ({ children }) => {\n  return (\n    <div className={styles.user_list__container}>\n      <div className={styles.user_list__header}>\n        <p>User</p>\n        <p>Invite</p>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst UserItem = ({ user, setSelectedUsers }) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    if (selected) {\n      setSelectedUsers((prevUsers) =>\n        prevUsers.filter((prevUser) => prevUser !== user.id)\n      );\n    } else {\n      setSelectedUsers((prevUsers) => [...prevUsers, user.id]);\n    }\n\n    setSelected((prevSelected) => !prevSelected);\n  };\n\n  return (\n    <div className={styles.user_item__wrapper} onClick={handleSelect}>\n      <div className={styles.user_item__name_wrapper}>\n        <Avatar image={user.image} name={user.fullName || user.id} size={32} />\n        <p className={styles.user_item__name}>{user.fullName || user.id}</p>\n      </div>\n      {selected ? (\n        <WavePointIcon />\n      ) : (\n        <div className={styles.user_item__invite_empty} />\n      )}\n    </div>\n  );\n};\n\nconst UserList = ({ setSelectedUsers }) => {\n  const { client } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers(\n          { id: { $ne: client.userID } },\n          { id: 1 },\n          { limit: 8 }\n        );\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n\n  if (error) {\n    return (\n      <ListContainer>\n        <div className={styles.user_list__message}>\n          Error loading, please refresh and try again.\n        </div>\n      </ListContainer>\n    );\n  }\n\n  if (listEmpty) {\n    return (\n      <ListContainer>\n        <div className={styles.user_list__message}>No users found.</div>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {loading ? (\n        <div className={styles.user_list__message}>Loading users...</div>\n      ) : (\n        users?.map((user, i) => (\n          <UserItem\n            index={i}\n            key={user.id}\n            user={user}\n            setSelectedUsers={setSelectedUsers}\n          />\n        ))\n      )}\n    </ListContainer>\n  );\n};\n\nexport default UserList;\n","import React from \"react\";\nimport { Modal, Form, Button, Input } from \"rsuite\";\nimport UserList from \"../UserList/UserList\";\n\nconst Textarea = React.forwardRef((props, ref) => (\n  <Input {...props} as=\"textarea\" ref={ref} />\n));\n\nconst ChannelCreateEdit = (props) => {\n  return (\n    <Modal\n      open={props.newChannelOpen}\n      onClose={props.handleNewChannelClose}\n      size=\"xs\"\n    >\n      <Modal.Header>\n        <Modal.Title>New Channel</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          fluid\n          onChange={props.setChannelFormValue}\n          formValue={props.channelFormValue}\n        >\n          <Form.Group\n            controlId=\"name-9\"\n            onChange={props.channelNameChangeHandler}\n          >\n            <Form.ControlLabel>Channel Name</Form.ControlLabel>\n            <Form.Control name=\"channelname\" />\n            <Form.HelpText>Required</Form.HelpText>\n          </Form.Group>\n          <Form.Group\n            controlId=\"textarea-9\"\n            onChange={props.channelDescChangeHandler}\n          >\n            <Form.ControlLabel>Channel Description</Form.ControlLabel>\n            <Form.Control\n              rows={5}\n              name=\"channeldescription\"\n              accepter={Textarea}\n            />\n          </Form.Group>\n          <UserList setSelectedUsers={props.setSelectedUsers} />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.handleNewChannelSubmission} appearance=\"primary\">\n          Confirm\n        </Button>\n        <Button onClick={props.handleNewChannelClose} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ChannelCreateEdit;\n","import React, { useEffect, useState } from \"react\";\nimport { ChannelList, useChatContext } from \"stream-chat-react\";\nimport { Sidenav, Nav, Dropdown, Button, Row, Col } from \"rsuite\";\nimport DashboardIcon from \"@rsuite/icons/Dashboard\";\nimport ScatterIcon from \"@rsuite/icons/Scatter\";\nimport WavePointIcon from \"@rsuite/icons/WavePoint\";\n\nimport styles from \"./SideNavChannel.module.css\";\nimport ChannelListCustom from \"../ChannelListCustom/ChannelListCustom\";\nimport ChannelListPreview from \"../ChannelListPreview/ChannelListPreview\";\nimport ChannelCreateEdit from \"../ChannelCreateEdit/ChannelCreateEdit\";\n\nconst customChannelTeamFilter = (channels) => {\n  return channels.filter((channel) => channel.type === \"team\");\n};\n\nconst customChannelMessagingFilter = (channels) => {\n  return channels.filter((channel) => channel.type === \"messaging\");\n};\n\nconst SideNavChannel = () => {\n  const [newChannelOpen, setNewChannelOpen] = useState(false);\n  const [channelFormValue, setChannelFormValue] = useState({\n    channelName: \"\",\n    channelDescription: \"\",\n  });\n  const [channelSearchTerm, setChannelSearchTerm] = useState(\"\");\n  const [channelType, setChannelType] = useState(\"team\");\n\n  const { client, setActiveChannel } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || \"\"]);\n\n  const filters = { members: { $in: [client.userID] } };\n\n  const [query, setQuery] = useState(\"\");\n  const [teamChannels, setTeamChannels] = useState([]);\n  const [directChannels, setDirectChannels] = useState([]);\n\n  useEffect(() => {\n    if (!query) {\n      setTeamChannels([]);\n      setDirectChannels([]);\n    }\n  }, [query]);\n\n  const handleNewChannelClose = () => {\n    setNewChannelOpen(false);\n  };\n  const handleNewChannelSubmission = async () => {\n    try {\n      const { channelName, channelDescription } = channelFormValue;\n      if (channelName && channelDescription) {\n        try {\n          const newChannel = await client.channel(channelType, channelName, {\n            name: channelName,\n            description: channelDescription,\n            members: selectedUsers,\n          });\n          await newChannel.watch();\n          setSelectedUsers([client.userID]);\n          setActiveChannel(newChannel);\n        } catch (error) {\n          console.log(error);\n        }\n\n        setNewChannelOpen(false);\n\n        setChannelFormValue({\n          channelName: \"\",\n          channelDescription: \"\",\n        });\n\n        //rerender the channels\n      } else {\n        //show error message\n      }\n    } catch (error) {\n      //show error msg\n    }\n  };\n  const handleNewChannelOpenDirect = () => {\n    setNewChannelOpen(true);\n    setChannelType(\"messaging\");\n  };\n  const handleNewChannelOpenTeam = () => {\n    setNewChannelOpen(true);\n    setChannelType(\"team\");\n  };\n  const channelNameChangeHandler = (e) => {\n    setChannelFormValue({\n      ...channelFormValue,\n      channelName: e.target.value,\n    });\n  };\n  const channelDescChangeHandler = (e) => {\n    setChannelFormValue({\n      ...channelFormValue,\n      channelDescription: e.target.value,\n    });\n  };\n  const channelSearchInputHandler = (e) => {\n    setChannelSearchTerm(e);\n  };\n  const channelSearchHandler = async () => {\n    try {\n      const channelResponse = client.queryChannels({\n        type: \"team\",\n        name: { $autocomplete: channelSearchTerm },\n        members: { $in: [client.userID] },\n      });\n      const userResponse = client.queryUsers({\n        id: { $ne: client.userID },\n        name: { $autocomplete: channelSearchTerm },\n      });\n\n      const [channels, { users }] = await Promise.all([\n        channelResponse,\n        userResponse,\n      ]);\n\n      if (channels.length) setTeamChannels(channels);\n      if (users.length) setDirectChannels(users);\n    } catch (error) {\n      setQuery(\"\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Sidenav\n        defaultOpenKeys={[\"3\", \"4\"]}\n        activeKey=\"1\"\n        style={{ height: \"100%\" }}\n      >\n        <Sidenav.Body>\n          <Nav style={{ paddingTop: 10 }}>\n            <Nav.Item\n              eventKey=\"1\"\n              className={styles.channelListHead}\n              icon={<DashboardIcon />}\n            >\n              ConnectED\n            </Nav.Item>\n            <Row>\n              <Col lg={20}>\n                <Dropdown eventKey=\"3\" title=\"Channels\" icon={<ScatterIcon />}>\n                  <ChannelList\n                    filters={filters}\n                    channelRenderFilterFn={customChannelTeamFilter}\n                    List={(listProps) => (\n                      <ChannelListCustom {...listProps} type=\"team\" />\n                    )}\n                    Preview={(previewProps) => (\n                      <ChannelListPreview {...previewProps} type=\"team\" />\n                    )}\n                  />\n                </Dropdown>\n              </Col>\n              <Col>\n                <Button\n                  className={styles.addButton}\n                  onClick={handleNewChannelOpenTeam}\n                >\n                  +\n                </Button>\n              </Col>\n            </Row>\n\n            <br/>\n\n            <Row>\n              <Col lg={20}>\n                <Dropdown\n                  eventKey=\"4\"\n                  title=\"Direct Messages\"\n                  icon={<WavePointIcon />}\n                >\n                  <ChannelList\n                    filters={filters}\n                    channelRenderFilterFn={customChannelMessagingFilter}\n                    List={(listProps) => (\n                      <ChannelListCustom {...listProps} type=\"messaging\" />\n                    )}\n                    Preview={(previewProps) => (\n                      <ChannelListPreview {...previewProps} type=\"messaging\" />\n                    )}\n                  />\n                </Dropdown>\n              </Col>\n              <Col>\n                <Button\n                  className={styles.addButton}\n                  onClick={handleNewChannelOpenDirect}\n                >\n                  +\n                </Button>\n              </Col>\n            </Row>\n            <ChannelCreateEdit\n              handleNewChannelClose={handleNewChannelClose}\n              handleNewChannelSubmission={handleNewChannelSubmission}\n              channelNameChangeHandler={channelNameChangeHandler}\n              channelDescChangeHandler={channelDescChangeHandler}\n              channelSearchInputHandler={channelSearchInputHandler}\n              channelSearchHandler={channelSearchHandler}\n              newChannelOpen={newChannelOpen}\n              channelFormValue={channelFormValue}\n              setSelectedUsers={setSelectedUsers}\n            />\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </React.Fragment>\n  );\n};\n\nexport default SideNavChannel;\n","import React from \"react\";\nimport { Modal, Button } from \"rsuite\";\n\nimport styles from \"./LogoutModal.module.css\";\n\nconst LogoutModal = (props) => {\n  return (\n    <div className={styles.logout_modal}>\n      <Modal\n        open={props.logoutModalOpen}\n        onClose={props.handleLogoutClose}\n        size=\"xs\"\n      >\n        <Modal.Header>\n          <Modal.Title>Do you really want to logout?</Modal.Title>\n          <br />\n          <br />\n        </Modal.Header>\n        <Modal.Footer>\n          <Button onClick={props.handleLogoutSubmission} appearance=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={props.handleLogoutClose} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LogoutModal;\n","import React, { useState } from \"react\";\nimport {\n  MessageList,\n  MessageInput,\n  Thread,\n  Window,\n  useChannelActionContext,\n  Avatar,\n  useChannelStateContext,\n  useChatContext,\n} from \"stream-chat-react\";\nimport { Button } from \"rsuite\";\nimport OffRoundIcon from \"@rsuite/icons/OffRound\";\nimport EditIcon from \"@rsuite/icons/Edit\";\nimport { useDispatch } from \"react-redux\";\n\nimport styles from \"./ChannelInner.module.css\";\nimport LogoutModal from \"../LogoutModal/LogoutModal\";\nimport { USER_LOGOUT } from \"../../constants/userConstants\";\nexport const GiphyContext = React.createContext({});\n\nconst ChannelInner = () => {\n  const [giphyState, setGiphyState] = useState(false);\n  const { sendMessage } = useChannelActionContext();\n\n  const overrideSubmitHandler = (message) => {\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: message.parent?.id,\n      parent: message.parent,\n      text: message.text,\n    };\n\n    if (giphyState) {\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\n    }\n\n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return (\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\n      <div style={{ display: \"flex\", width: \"100%\" }}>\n        <Window>\n          <TeamChannelHeader />\n          <MessageList />\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\n        </Window>\n        <Thread />\n      </div>\n    </GiphyContext.Provider>\n  );\n};\n\nconst TeamChannelHeader = () => {\n  const { channel, watcher_count } = useChannelStateContext();\n  const { client } = useChatContext();\n\n  const MessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID\n    );\n    const additionalMembers = members.length - 3;\n\n    if (channel.type === \"messaging\") {\n      return (\n        <div>\n          {members.map(({ user }, i) => (\n            <div key={i} className={styles.team_channel_header__name_multi}>\n              <Avatar\n                image={user.image}\n                name={user.email || user.id}\n                size={32}\n              />\n              <p\n                className={`${styles.team_channel_header__name} ${styles.user}`}\n              >\n                {user.email || user.id}\n              </p>\n            </div>\n          ))}\n\n          {additionalMembers > 0 && (\n            <p className={`${styles.team_channel_header__name} ${styles.user}`}>\n              and {additionalMembers} more\n            </p>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <p className={`${styles.team_channel_header__name} ${styles.user}`}>\n          # {channel.data.name} {\"  \"}\n          <span>\n            <EditIcon />\n          </span>\n        </p>\n      </div>\n    );\n  };\n\n  const getWatcherText = (watchers) => {\n    if (!watchers) return \"No users online\";\n    if (watchers === 1) return \"1 user online\";\n    return `${watchers} users online`;\n  };\n\n  const [logoutModalOpen, setLogoutModalOpen] = useState(false);\n\n  const handleLogoutOpen = () => {\n    setLogoutModalOpen(true);\n  };\n\n  const handleLogoutClose = () => {\n    setLogoutModalOpen(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleLogoutSubmission = () => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n    setLogoutModalOpen(false);\n    window.location.reload();\n  };\n\n  return (\n    <div\n      className={`${styles.team_channel_header__container} ${styles.team_channel_header__channel_wrapper}`}\n    >\n      <MessagingHeader />\n      <div className={styles.team_channel_header__right}>\n        <span className={styles.watcher_count}>\n          {getWatcherText(watcher_count)}\n        </span>\n        <span>\n          <Button onClick={handleLogoutOpen}>\n            {\" \"}\n            Logout\n            <OffRoundIcon />\n          </Button>\n        </span>\n      </div>\n      <LogoutModal\n        logoutModalOpen={logoutModalOpen}\n        handleLogoutClose={handleLogoutClose}\n        handleLogoutSubmission={handleLogoutSubmission}\n      />\n    </div>\n  );\n};\n\nexport default ChannelInner;\n","import React from \"react\";\nimport { Channel, MessageTeam } from \"stream-chat-react\";\n\nimport ChannelInner from \"../ChannelInner/ChannelInner\";\nimport styles from \"./ChannelContainer.module.css\";\n\nconst ChannelContainer = () => {\n  const EmptyState = () => (\n    <div className={styles.channel_empty__container}>\n      <p className={styles.channel_empty__first}>\n        This is the beginning of your chat history.\n      </p>\n      <p className={styles.channel_empty__second}>\n        Send messages, attachments, links, emojis, and more!\n      </p>\n    </div>\n  );\n\n  return (\n    <div className={styles.channel__container}>\n      <Channel\n        EmptyStateIndicator={EmptyState}\n        Message={(messageProps, i) => <MessageTeam key={i} {...messageProps} />}\n      >\n        <ChannelInner />\n      </Channel>\n    </div>\n  );\n};\n\nexport default ChannelContainer;\n","import React from \"react\";\nimport { Row, Col } from \"rsuite\";\nimport { StreamChat } from \"stream-chat\";\nimport { Chat } from \"stream-chat-react\";\n\nimport SideNavChannel from \"../../../components/SideNavChannel/SideNavChannel\";\nimport styles from \"./TextChat.module.css\";\nimport ChannelContainer from \"../../../components/ChannelContainer/ChannelContainer\";\n\nconst apiKey = process.env.REACT_APP_STREAM_API_KEY;\nconst client = StreamChat.getInstance(apiKey);\nconst userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\nif (userInfo) {\n  const streamToken = userInfo.stream_token;\n  if (streamToken) {\n    client.connectUser(\n      {\n        id: userInfo._id,\n        email: userInfo.email,\n      },\n      streamToken\n    );\n  }\n}\n\nconst TextChat = () => {\n  return (\n    <Chat client={client} theme=\"team dark\">\n      <Col lg={5} className={`${styles.channels} ${styles.heightExpand}`}>\n        <SideNavChannel />\n      </Col>\n      <Col\n        lg={18}\n        className={`${styles.connectionMain} ${styles.heightExpand}`}\n      >\n        <Row className={styles.heightExpandChats}>\n          <ChannelContainer />\n        </Row>\n      </Col>\n    </Chat>\n  );\n};\n\nexport default TextChat;\n","import React from \"react\";\nimport styles from \"./About.module.css\";\nimport ThaparIcon from \"../../Auth/images/thapar_icon.jpg\";\n\nconst About = () => {\n  return (\n    <div class={`${styles.align}`}>\n      <div class={`${styles.grid}`}>\n        <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n        <br />\n        <br />\n        <div class={`${styles.form} ${styles.login}`}>\n          ConnectED is a college portal for universities for all internal\n          communications. Technologies used in Portal are React.js, Node.js,\n          MongoDB, StreamSDK.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport { Button, Input, Message } from \"rsuite\";\nimport TagLockIcon from \"@rsuite/icons/TagLock\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nimport styles from \"./Profile.module.css\";\nimport ThaparIcon from \"../../Auth/images/thapar_icon.jpg\";\n\nconst Profile = () => {\n  const userInfo = JSON.parse(useSelector((state) => state.userSlice.userInfo));\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorPresent, setErrorPresent] = useState(false);\n  const [successPresent, setSuccessPresent] = useState(true);\n\n  const [user, setUser] = useState({\n    password: \"\",\n    repassword: \"\",\n  });\n\n  const handleChangePass = (e) => {\n    setUser({\n      ...user,\n      password: e,\n    });\n  };\n  const handleChangeRePass = (e) => {\n    setUser({\n      ...user,\n      repassword: e,\n    });\n  };\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    setErrorPresent(false);\n    try {\n      const { password, repassword } = user;\n      if (password && repassword && password === repassword) {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          \"http://localhost:5000/api/user/profile\",\n          { ...userInfo, password },\n          config\n        );\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        setSuccessPresent(false);\n      } else {\n        setErrorPresent(true);\n        setSuccessPresent(true);\n        if (password !== repassword) {\n          setErrorMessage(\"Password and Confirm Password must be same!\");\n        } else {\n          setErrorMessage(\"Incorrect Inputs!\");\n        }\n      }\n    } catch (error) {\n      const errorVal =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      setErrorMessage(errorVal);\n      setErrorPresent(true);\n      setSuccessPresent(true);\n    }\n  };\n\n  return (\n    <div class={`${styles.align}`}>\n      <div class={`${styles.grid}`}>\n        <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n        <form\n          onSubmit={handleSubmission}\n          class={`${styles.form} ${styles.login}`}\n        >\n          <div class={styles.form__field}>\n            <label for={styles.login__password}>\n              <TagLockIcon />\n            </label>\n            <Input\n              id={styles.login__password}\n              type=\"password\"\n              name=\"password\"\n              class={styles.form__input}\n              placeholder=\"Change Password\"\n              onChange={handleChangePass}\n              required\n            />\n          </div>\n          <div class={styles.form__field}>\n            <label for={styles.login__password}>\n              <TagLockIcon />\n            </label>\n            <Input\n              id={styles.login__password}\n              type=\"password\"\n              name=\"repassword\"\n              class={styles.form__input}\n              placeholder=\"Confirm Changed Password\"\n              onChange={handleChangeRePass}\n              required\n            />\n          </div>\n          <div class={styles.form__field}>\n            <Button\n              color=\"blue\"\n              appearance=\"primary\"\n              className={styles.Login_btn}\n              type=\"submit\"\n            >\n              Update Password\n            </Button>\n          </div>\n        </form>\n        <br />\n        <Message showIcon type=\"error\" hidden={!errorPresent}>\n          {errorMessage}\n        </Message>\n        <Message showIcon type=\"success\" hidden={successPresent}>\n          Success!\n        </Message>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Grid, Row, Col } from \"rsuite\";\nimport { useSelector } from \"react-redux\";\n\nimport SideNavMain from \"../../../components/SideBarMain/SideNavMain\";\nimport styles from \"./AppGrid.module.css\";\nimport TextChat from \"../TextChat/TextChat\";\nimport About from \"../About/About\";\nimport Profile from \"../Profile/Profile\";\n\nconst AppGrid = () => {\n  const pageInfo = useSelector((state) => state.pageSlice.page);\n  return (\n    <Grid fluid className={styles.heightExpand}>\n      <Row className={styles.heightExpand}>\n        <Col lg={0.5} className={`${styles.sidemain} ${styles.heightExpand}`}>\n          <SideNavMain />\n        </Col>\n        {pageInfo === \"home\" && <TextChat />}\n        {pageInfo === \"about\" && <About />}\n        {pageInfo === \"profile\" && <Profile />}\n      </Row>\n    </Grid>\n  );\n};\n\nexport default AppGrid;\n","import { CustomProvider } from \"rsuite\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Login from \"./pages/Auth/Login\";\nimport Register from \"./pages/Auth/Register\";\nimport Request from \"./pages/Auth/Request\";\nimport AppGrid from \"./pages/App/AppGrid/AppGrid\";\nimport { userActions } from \"./store/userSlice\";\nimport { USER_LOGIN_SUCCESS } from \"./constants/userConstants\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"stream-chat-react/dist/css/index.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userSlice.userInfo);\n\n  useEffect(() => {\n    const userInfoStorage = localStorage.getItem(\"userInfo\");\n    if (userInfoStorage) {\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_SUCCESS,\n          payload: userInfoStorage,\n        })\n      );\n    }\n  }, [dispatch]);\n\n  return (\n    <CustomProvider theme=\"dark\">\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={userInfo ? <AppGrid /> : <Login />}\n          ></Route>\n          <Route\n            exact\n            path=\"/home\"\n            element={userInfo ? <AppGrid /> : <Login />}\n          ></Route>\n          <Route\n            exact\n            path=\"/login\"\n            element={userInfo ? <AppGrid /> : <Login />}\n          ></Route>\n          <Route\n            path=\"/register\"\n            element={userInfo ? <AppGrid /> : <Register />}\n          ></Route>\n          <Route\n            path=\"/request\"\n            element={userInfo ? <AppGrid /> : <Request />}\n          ></Route>\n        </Routes>\n      </Router>\n    </CustomProvider>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport userSlice from \"./userSlice\";\nimport pageSlice from \"./pageSlice\";\n\nconst store = configureStore({\n  reducer: {\n    userSlice: userSlice.reducer,\n    pageSlice: pageSlice.reducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}