{"version":3,"sources":["components/SideBarMain/SideNavMain.module.css","pages/App/TextChat/TextChat.module.css","pages/App/About/About.module.css","pages/Auth/Login.module.css","pages/App/AppGrid/AppGrid.module.css","components/ChannelContainer/ChannelContainer.module.css","pages/Auth/Register.module.css","components/SideNavChannel/SideNavChannel.module.css","components/ChannelListCustom/ChannelListCustom.module.css","components/LogoutModal/LogoutModal.module.css","pages/App/Profile/Profile.module.css","components/ChannelInner/ChannelInner.module.css","components/UserList/UserList.module.css","constants/userConstants.js","store/userSlice.js","pages/Auth/images/thapar_icon.jpg","pages/Auth/Login.js","pages/Auth/Register.js","pages/Auth/Request.js","store/pageSlice.js","components/SideBarMain/SideNavMain.js","components/ChannelListCustom/ChannelListCustom.js","components/ChannelListPreview/ChannelListPreview.js","components/UserList/UserList.js","components/ChannelCreate/ChannelCreate.js","components/SideNavChannel/SideNavChannel.js","components/TeamMessage/TeamMessage.js","components/ChannelEdit/ChannelEdit.js","components/LogoutModal/LogoutModal.js","components/ChannelInner/ChannelInner.js","components/ChannelContainer/ChannelContainer.js","pages/App/TextChat/TextChat.js","pages/App/About/About.js","pages/App/Profile/Profile.js","pages/App/AppGrid/AppGrid.js","App.js","store/chatSlice.js","store/index.js","index.js"],"names":["module","exports","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","userSlice","createSlice","name","initialState","loading","userInfo","error","reducers","userLogin","state","action","payload","type","userRegister","userActions","actions","Login","useState","errorMessage","setErrorMessage","errorPresent","setErrorPresent","navigate","useNavigate","dispatch","useDispatch","useSelector","email","password","user","setUser","useEffect","userInfoStorage","localStorage","getItem","handleSubmission","e","a","preventDefault","config","headers","axios","post","process","data","setItem","JSON","stringify","errorVal","response","message","Fragment","class","styles","align","grid","src","ThaparIcon","alt","className","college_icon","onSubmit","form","login","form__field","for","login__username","Input","autocomplete","id","form__input","placeholder","onChange","required","login__password","Button","color","appearance","Login_btn","text__left","to","showIcon","hidden","Register","repassword","rollnumber","batch","firstname","lastname","Request","selectedImage","setSelectedImage","imageUrl","setImageUrl","URL","createObjectURL","accept","style","display","target","files","htmlFor","variant","component","mt","textAlign","height","pageSlice","page","togglePage","pageActions","CustomNav","active","onSelect","props","Nav","vertical","activeKey","Item","iconsShell","eventKey","icon","icons","iconHome","SideNavMain","React","setActive","reversed","ChannelListCustom","children","ChannelListPreview","setActiveChannel","channel","useChatContext","client","ChannelPreview","Dropdown","DirectPreview","members","Object","values","filter","userID","Grid","Row","Col","Avatar","image","size","onClick","console","log","InviteIcon","marginLeft","width","viewBox","fill","xmlns","d","ListContainer","user_list__container","user_list__header","UserItem","setSelectedUsers","selected","setSelected","user_item__wrapper","prevUsers","prevUser","prevSelected","user_item__name_wrapper","user_item__name","user_item__selector","user_item__invite_empty","UserList","users","setUsers","setLoading","listEmpty","setListEmpty","setError","getUsers","queryUsers","$ne","limit","length","user_list__message","map","i","index","Textarea","forwardRef","ref","as","ChannelCreateEdit","Modal","open","newChannelOpen","onClose","handleNewChannelClose","Header","Title","Body","Form","fluid","setChannelFormValue","formValue","channelFormValue","Group","controlId","channelNameChangeHandler","ControlLabel","Control","HelpText","channelDescChangeHandler","rows","accepter","Footer","handleNewChannelSubmission","customChannelTeamFilter","channels","customChannelMessagingFilter","SideNavChannel","setNewChannelOpen","channelName","channelDescription","parse","userType","usertype","channelSearchTerm","setChannelSearchTerm","channelType","setChannelType","selectedUsers","filters","$in","query","setQuery","setTeamChannels","setDirectChannels","description","newChannel","watch","channelSearchHandler","channelResponse","queryChannels","$autocomplete","userResponse","Promise","all","Sidenav","defaultOpenKeys","paddingTop","channelListHead","lg","title","ChannelList","channelRenderFilterFn","List","listProps","Preview","previewProps","addButton","ChannelCreate","value","channelSearchInputHandler","TeamMessage","setPinsOpen","useMessageContext","handleOpenThread","isPinned","MessageTeam","event","ChannelEdit","LogoutModal","logout_modal","logoutModalOpen","handleLogoutClose","handleLogoutSubmission","GiphyContext","createContext","TeamChannelHeader","watchers","useChannelStateContext","watcher_count","editChannelOpen","setEditChannelOpen","handleEditChannelOpen","update","addMembers","MessagingHeader","additionalMembers","team_channel_header__name_multi","team_channel_header__name","setLogoutModalOpen","team_channel_header__container","team_channel_header__channel_wrapper","team_channel_header__right","removeItem","window","location","reload","ChannelInner","giphyState","setGiphyState","sendMessage","useChannelActionContext","Provider","Window","MessageList","MessageInput","overrideSubmitHandler","updatedMessage","attachments","mentioned_users","parent_id","parent","text","Thread","ChannelContainer","channel__container","Channel","EmptyStateIndicator","channel_empty__container","channel_empty__first","channel_empty__second","Message","messageProps","StreamChat","getInstance","streamToken","stream_token","connectUser","_id","fullName","TextChat","Chat","theme","heightExpand","connectionMain","heightExpandChats","About","Profile","successPresent","setSuccessPresent","AppGrid","pageInfo","sidemain","App","CustomProvider","exact","path","element","chatSlice","pinState","isEditing","togglePinState","toggleEditState","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5ad7e9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons\":\"SideNavMain_icons__2LVzK\",\"iconHome\":\"SideNavMain_iconHome__1kj6b\",\"iconsShell\":\"SideNavMain_iconsShell__1IOZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heightExpand\":\"TextChat_heightExpand__3MKmZ\",\"gridformat\":\"TextChat_gridformat__EOsDz\",\"heightExpandChats\":\"TextChat_heightExpandChats__NLREp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"About_align__1Dr4L\",\"grid\":\"About_grid__1xIgM\",\"hidden\":\"About_hidden__1g3NU\",\"form\":\"About_form__2bhnC\",\"form__input\":\"About_form__input__2kj0P\",\"text__left\":\"About_text__left__3ETrP\",\"Login_btn\":\"About_Login_btn__1O896\",\"college_icon\":\"About_college_icon__33U95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"Login_align__3YR6F\",\"grid\":\"Login_grid__2jJyU\",\"hidden\":\"Login_hidden__RbZG0\",\"form\":\"Login_form__3HwUO\",\"form__field\":\"Login_form__field__3pk-n\",\"form__input\":\"Login_form__input__mvmS7\",\"login\":\"Login_login__13Uv8\",\"text__left\":\"Login_text__left__2fDR6\",\"Login_btn\":\"Login_Login_btn__3iAc0\",\"college_icon\":\"Login_college_icon__3qYvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridformat\":\"AppGrid_gridformat__1LnZJ\",\"heightExpand\":\"AppGrid_heightExpand__2vQMC\",\"heightExpandChats\":\"AppGrid_heightExpandChats__3XrSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"channel_empty__container\":\"ChannelContainer_channel_empty__container__IMcCj\",\"channel_empty__first\":\"ChannelContainer_channel_empty__first__3LgIK\",\"channel_empty__user-name\":\"ChannelContainer_channel_empty__user-name__2dEwz\",\"channel_empty__second\":\"ChannelContainer_channel_empty__second__2nXNh\",\"channel__container\":\"ChannelContainer_channel__container__1c5S6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"Register_align__3LS2s\",\"grid\":\"Register_grid__JuKu1\",\"hidden\":\"Register_hidden__1qz8X\",\"form\":\"Register_form__2HsqM\",\"form__field\":\"Register_form__field__QWX3o\",\"form__input\":\"Register_form__input__2P7GN\",\"login\":\"Register_login__3hLXS\",\"text__left\":\"Register_text__left__3EXn_\",\"Login_btn\":\"Register_Login_btn__1bq8X\",\"college_icon\":\"Register_college_icon__1LEds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"channelListHead\":\"SideNavChannel_channelListHead__UY6qM\",\"addButton\":\"SideNavChannel_addButton__1HNbg\",\"searchButton\":\"SideNavChannel_searchButton__1FPYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"ChannelListCustom_loading__WA9ZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout_modal\":\"LogoutModal_logout_modal__3ylHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"align\":\"Profile_align__1eF7o\",\"grid\":\"Profile_grid__2j8k-\",\"hidden\":\"Profile_hidden__2r1R7\",\"form\":\"Profile_form__2gsxx\",\"form__field\":\"Profile_form__field__cQeEA\",\"form__input\":\"Profile_form__input__3BRGN\",\"login\":\"Profile_login__2w50F\",\"text__left\":\"Profile_text__left__3Zacv\",\"Login_btn\":\"Profile_Login_btn__1XHvv\",\"college_icon\":\"Profile_college_icon__3MyCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"team_channel_header__container\":\"ChannelInner_team_channel_header__container__3Gmzc\",\"team_channel_header__channel_wrapper\":\"ChannelInner_team_channel_header__channel_wrapper__l7i_H\",\"team_channel_header__name\":\"ChannelInner_team_channel_header__name__2u6j5\",\"team_channel_header__name_wrapper\":\"ChannelInner_team_channel_header__name_wrapper__1aUnq\",\"team_channel_header__name_multi\":\"ChannelInner_team_channel_header__name_multi__-Vcbt\",\"str-chat__avatar\":\"ChannelInner_str-chat__avatar__zAeE1\",\"user\":\"ChannelInner_user__1E5Co\",\"team_channel_header__right\":\"ChannelInner_team_channel_header__right__X8U-l\",\"team_channel_header__right-pin-wrapper\":\"ChannelInner_team_channel_header__right-pin-wrapper__2PLGQ\",\"team_channel_header__right-text\":\"ChannelInner_team_channel_header__right-text__2zAvl\",\"team_channel_list\":\"ChannelInner_team_channel_list__1WqwG\",\"team_channel_list__message\":\"ChannelInner_team_channel_list__message__78XDG\",\"loading\":\"ChannelInner_loading__1Nhcx\",\"team_channel_list__header\":\"ChannelInner_team_channel_list__header__P-qhu\",\"team_channel_list__header__title\":\"ChannelInner_team_channel_list__header__title__26CJj\",\"watcher_count\":\"ChannelInner_watcher_count__2Au9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_list__message\":\"UserList_user_list__message__2t2AX\",\"user_item__wrapper\":\"UserList_user_item__wrapper__2QNRk\",\"user_item__name_wrapper\":\"UserList_user_item__name_wrapper__Gny15\",\"user_item__name\":\"UserList_user_item__name__1n5xl\",\"user_item__last_active\":\"UserList_user_item__last_active__3p576\",\"user_item__selector\":\"UserList_user_item__selector__2WAaP\",\"user_item__invite_empty\":\"UserList_user_item__invite_empty__2VDZF\",\"user_list__container\":\"UserList_user_list__container__1q9v9\",\"user_list__header\":\"UserList_user_list__header__zKrCH\"};","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n} from \"../constants/userConstants\";\n\nconst userSlice = createSlice({\n  name: \"userSlice\",\n  initialState: {\n    loading: false,\n    userInfo: null,\n    error: null,\n  },\n  reducers: {\n    userLogin(state, action) {\n      switch (action.payload.type) {\n        case USER_LOGIN_REQUEST:\n          state.loading = true;\n          break;\n        case USER_LOGIN_SUCCESS:\n          state.loading = false;\n          state.userInfo = action.payload.payload;\n          break;\n        case USER_LOGIN_FAIL:\n          state.loading = false;\n          state.error = action.payload.payload;\n          break;\n        case USER_LOGOUT:\n          state.userInfo = null;\n          break;\n        default:\n          state.loading = false;\n          state.userInfo = null;\n          state.error = null;\n      }\n    },\n    userRegister(state, action) {\n      switch (action.payload.type) {\n        case USER_REGISTER_REQUEST:\n          state.loading = true;\n          break;\n        case USER_REGISTER_SUCCESS:\n          state.loading = false;\n          state.userInfo = action.payload.payload;\n          break;\n        case USER_REGISTER_FAIL:\n          state.loading = false;\n          state.error = action.payload.payload;\n          break;\n        default:\n          state.loading = false;\n          state.userInfo = {};\n          state.error = \"\";\n      }\n    },\n  },\n});\n\nexport const userActions = userSlice.actions;\nexport default userSlice;\n","export default __webpack_public_path__ + \"static/media/thapar_icon.675a74eb.jpg\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, Message } from \"rsuite\";\nimport EmailIcon from \"@rsuite/icons/Email\";\nimport TagLockIcon from \"@rsuite/icons/TagLock\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n} from \"../../constants/userConstants\";\nimport { userActions } from \"../../store/userSlice\";\nimport styles from \"./Login.module.css\";\nimport ThaparIcon from \"./images/thapar_icon.jpg\";\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorPresent, setErrorPresent] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userSlice.userInfo);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(\"/home\");\n    }\n  }, [navigate, userInfo]);\n\n  useEffect(() => {\n    const userInfoStorage = localStorage.getItem(\"userInfo\");\n    if (userInfoStorage) {\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_SUCCESS,\n          payload: userInfoStorage,\n        })\n      );\n    }\n  }, [navigate, dispatch]);\n\n  const handleChangeEmail = (e) => {\n    setUser({\n      ...user,\n      email: e,\n    });\n  };\n\n  const handleChangePass = (e) => {\n    setUser({\n      ...user,\n      password: e,\n    });\n  };\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    setErrorPresent(false);\n    try {\n      dispatch(userActions.userLogin({ type: USER_LOGIN_REQUEST }));\n      const { email, password } = user;\n      if (email && password) {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          `${process.env.REACT_APP_SERVER_URL}/api/user/login`,\n          { email, password },\n          config\n        );\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        dispatch(\n          userActions.userLogin({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n          })\n        );\n      } else {\n        setErrorMessage(\"Incorrect Inputs!\");\n      }\n    } catch (error) {\n      const errorVal =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_FAIL,\n          payload: errorVal,\n        })\n      );\n      setErrorMessage(errorVal);\n      setErrorPresent(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div class={`${styles.align}`}>\n        <div class={`${styles.grid}`}>\n          <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n          <form\n            onSubmit={handleSubmission}\n            class={`${styles.form} ${styles.login}`}\n          >\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"email\"\n                class={styles.form__input}\n                placeholder=\"Email\"\n                onChange={handleChangeEmail}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__password}>\n                <TagLockIcon />\n              </label>\n              <Input\n                id={styles.login__password}\n                type=\"password\"\n                name=\"password\"\n                class={styles.form__input}\n                placeholder=\"Password\"\n                onChange={handleChangePass}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <Button\n                color=\"blue\"\n                appearance=\"primary\"\n                className={styles.Login_btn}\n                type=\"submit\"\n              >\n                Login\n              </Button>\n            </div>\n          </form>\n          <br />\n          <p class={`${styles.text__left}`}>\n            New Member ? <Link to=\"/register\">Register</Link>\n          </p>\n          <br />\n          <Message showIcon type=\"error\" hidden={!errorPresent}>\n            {errorMessage}\n          </Message>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, Message } from \"rsuite\";\nimport EmailIcon from \"@rsuite/icons/Email\";\nimport TagLockIcon from \"@rsuite/icons/TagLock\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n} from \"../../constants/userConstants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../../store/userSlice\";\nimport styles from \"./Register.module.css\";\nimport ThaparIcon from \"./images/thapar_icon.jpg\";\n\nconst Register = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorPresent, setErrorPresent] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userSlice.userInfo);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    repassword: \"\",\n    rollnumber: \"\",\n    batch: \"\",\n    firstname: \"\",\n    lastname: \"\",\n  });\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(\"/home\");\n    }\n  }, [navigate, userInfo]);\n\n  useEffect(() => {\n    const userInfoStorage = localStorage.getItem(\"userInfo\");\n    if (userInfoStorage) {\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_SUCCESS,\n          payload: userInfoStorage,\n        })\n      );\n    }\n  }, [navigate, dispatch]);\n\n  const handleChangeEmail = (e) => {\n    setUser({\n      ...user,\n      email: e,\n    });\n  };\n  const handleChangePass = (e) => {\n    setUser({\n      ...user,\n      password: e,\n    });\n  };\n  const handleChangeRePass = (e) => {\n    setUser({\n      ...user,\n      repassword: e,\n    });\n  };\n  const handleChangeRoll = (e) => {\n    setUser({\n      ...user,\n      rollnumber: e,\n    });\n  };\n  const handleChangeFname = (e) => {\n    setUser({\n      ...user,\n      firstname: e,\n    });\n  };\n  const handleChangeLname = (e) => {\n    setUser({\n      ...user,\n      lastname: e,\n    });\n  };\n  const handleChangeBatch = (e) => {\n    setUser({\n      ...user,\n      batch: e,\n    });\n  };\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    setErrorPresent(false);\n    try {\n      dispatch(userActions.userRegister({ type: USER_REGISTER_REQUEST }));\n      const {\n        email,\n        password,\n        repassword,\n        rollnumber,\n        firstname,\n        lastname,\n        batch,\n      } = user;\n      if (email && password && repassword && password === repassword) {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          `${process.env.REACT_APP_SERVER_URL}/api/user/register`,\n          { email, password, rollnumber, firstname, lastname, batch },\n          config\n        );\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        dispatch(\n          userActions.userRegister({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n          })\n        );\n        dispatch(\n          userActions.userLogin({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n          })\n        );\n      } else {\n        setErrorPresent(true);\n        if (password !== repassword) {\n          setErrorMessage(\"Password and Confirm Password must be same!\");\n        } else {\n          setErrorMessage(\"Incorrect Inputs!\");\n        }\n      }\n    } catch (error) {\n      const errorVal =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(\n        userActions.userRegister({\n          type: USER_REGISTER_FAIL,\n          payload: errorVal,\n        })\n      );\n      setErrorMessage(errorVal);\n      setErrorPresent(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div class={`${styles.align}`}>\n        <div class={`${styles.grid}`}>\n          <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n          <form\n            onSubmit={handleSubmission}\n            class={`${styles.form} ${styles.login}`}\n          >\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"email\"\n                class={styles.form__input}\n                placeholder=\"College Email\"\n                onChange={handleChangeEmail}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <TagLockIcon />\n              </label>\n              <Input\n                autocomplete=\"rollnumber\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"rollnumber\"\n                class={styles.form__input}\n                placeholder=\"College Roll Number\"\n                onChange={handleChangeRoll}\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <TagLockIcon />\n              </label>\n              <Input\n                autocomplete=\"firstname\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"firstname\"\n                class={styles.form__input}\n                placeholder=\"First Name\"\n                onChange={handleChangeFname}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <TagLockIcon />\n              </label>\n              <Input\n                autocomplete=\"lastname\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"lastname\"\n                class={styles.form__input}\n                placeholder=\"Last Name\"\n                onChange={handleChangeLname}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <TagLockIcon />\n              </label>\n              <Input\n                autocomplete=\"batch\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"batch\"\n                class={styles.form__input}\n                placeholder=\"Batch\"\n                onChange={handleChangeBatch}\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__password}>\n                <TagLockIcon />\n              </label>\n              <Input\n                id={styles.login__password}\n                type=\"password\"\n                name=\"password\"\n                class={styles.form__input}\n                placeholder=\"Set Password\"\n                onChange={handleChangePass}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__password}>\n                <TagLockIcon />\n              </label>\n              <Input\n                id={styles.login__password}\n                type=\"password\"\n                name=\"repassword\"\n                class={styles.form__input}\n                placeholder=\"Confirm Password\"\n                onChange={handleChangeRePass}\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <Button\n                color=\"blue\"\n                appearance=\"primary\"\n                className={styles.Login_btn}\n                type=\"submit\"\n              >\n                Register\n              </Button>\n            </div>\n          </form>\n          <br />\n          <Message showIcon type=\"error\" hidden={!errorPresent}>\n            {errorMessage}\n          </Message>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"rsuite\";\nimport EmailIcon from \"@rsuite/icons/Email\";\nimport UserInfoIcon from \"@rsuite/icons/UserInfo\";\nimport GrowthIcon from \"@rsuite/icons/Growth\";\nimport BranchIcon from \"@rsuite/icons/Branch\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Login.module.css\";\nimport ThaparIcon from \"./images/thapar_icon.jpg\";\n\nconst Request = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useEffect(() => {\n    if (selectedImage) {\n      setImageUrl(URL.createObjectURL(selectedImage));\n    }\n  }, [selectedImage]);\n\n  return (\n    <React.Fragment>\n      <div class={`${styles.align}`}>\n        <div class={`${styles.grid}`}>\n          <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n          <form class={`${styles.form} ${styles.login}`}>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <UserInfoIcon />\n              </label>\n              <Input\n                autocomplete=\"name\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"name\"\n                class={styles.form__input}\n                placeholder=\"Full Name\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"college_email\"\n                class={styles.form__input}\n                placeholder=\"College Email\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <EmailIcon />\n              </label>\n              <Input\n                autocomplete=\"email\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"primary_email\"\n                class={styles.form__input}\n                placeholder=\"Primary Email\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <GrowthIcon />\n              </label>\n              <Input\n                autocomplete=\"year\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"batch\"\n                class={styles.form__input}\n                placeholder=\"Batch (eg. 2022)\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <label for={styles.login__username}>\n                <BranchIcon />\n              </label>\n              <Input\n                autocomplete=\"year\"\n                id={styles.login__username}\n                type=\"text\"\n                name=\"branch\"\n                class={styles.form__input}\n                placeholder=\"Branch (eg. Computer Engineering)\"\n                required\n              />\n            </div>\n            <div class={styles.form__field}>\n              <>\n                <input\n                  accept=\"image/*\"\n                  type=\"file\"\n                  id=\"select-image\"\n                  style={{ display: \"none\" }}\n                  onChange={(e) => setSelectedImage(e.target.files[0])}\n                />\n                <label htmlFor=\"select-image\">\n                  <div variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload College ID Card\n                  </div>\n                </label>\n                {imageUrl && selectedImage && (\n                  <div mt={2} textAlign=\"center\">\n                    <img\n                      src={imageUrl}\n                      alt={selectedImage.name}\n                      height=\"100px\"\n                    />\n                  </div>\n                )}\n              </>\n            </div>\n            <div class={styles.form__field}>\n              <Button\n                color=\"blue\"\n                appearance=\"primary\"\n                className={styles.Login_btn}\n              >\n                Request Access\n              </Button>\n            </div>\n          </form>\n          <br />\n          <p class={`${styles.text__left}`}>\n            Have Access ? <Link to=\"/login\">Login</Link>\n          </p>\n          <br />\n          <br />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Request;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst pageSlice = createSlice({\n  name: \"pageSlice\",\n  initialState: {\n    page: \"home\",\n  },\n  reducers: {\n    togglePage(state, action) {\n      state.page = action.payload.payload;\n    },\n  },\n});\n\nexport const pageActions = pageSlice.actions;\nexport default pageSlice;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Nav } from \"rsuite\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nimport { pageActions } from \"../../store/pageSlice\";\nimport styles from \"./SideNavMain.module.css\";\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n  return (\n    <Nav\n      {...props}\n      vertical\n      activeKey={active}\n      onSelect={onSelect}\n      style={{ height: \"100%\" }}\n    >\n      <Nav.Item\n        className={styles.iconsShell}\n        eventKey=\"home\"\n        icon={<HomeIcon className={`${styles.icons} ${styles.iconHome}`} />}\n      ></Nav.Item>\n      <Nav.Item\n        className={styles.iconsShell}\n        eventKey=\"profile\"\n        icon={<AccountCircleIcon className={styles.icons} />}\n      ></Nav.Item>\n      <Nav.Item\n        className={styles.iconsShell}\n        eventKey=\"about\"\n        icon={<InfoIcon className={styles.icons} />}\n      ></Nav.Item>\n    </Nav>\n  );\n};\n\nconst SideNavMain = () => {\n  const dispatch = useDispatch();\n  const [active, setActive] = React.useState(\"home\");\n  useEffect(() => {\n    dispatch(\n      pageActions.togglePage({\n        payload: active,\n      })\n    );\n  }, [active, dispatch]);\n\n  return (\n    <React.Fragment>\n      <CustomNav\n        appearance=\"subtle\"\n        reversed\n        active={active}\n        onSelect={setActive}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SideNavMain;\n","import React from \"react\";\nimport styles from \"./ChannelListCustom.module.css\";\n\nconst ChannelListCustom = ({ children, error = false, loading, type }) => {\n  if (error) {\n    return (\n      <div className={styles.loading}>Connection Error! Please try again!</div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className={styles.loading}>\n        {type === \"team\" ? \"Channels \" : \"Messages\"} loading....\n      </div>\n    );\n  }\n\n  return <React.Fragment>{children}</React.Fragment>;\n};\n\nexport default ChannelListCustom;\n","import React from \"react\";\nimport { Avatar, useChatContext } from \"stream-chat-react\";\nimport { Dropdown, Grid, Row, Col } from \"rsuite\";\n\nconst ChannelListPreview = ({ setActiveChannel, channel, type }) => {\n  const { channel: activeChannel, client } = useChatContext();\n\n  const ChannelPreview = () => (\n    <Dropdown.Item eventKey={channel?.data?.id} key={channel?.data?.id}>\n      # {channel?.data?.name || channel?.data?.id}\n    </Dropdown.Item>\n  );\n\n  const DirectPreview = () => {\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID\n    );\n\n    return (\n      <Dropdown.Item eventKey={members[0]?.user?.id} key={members[0]?.user?.id}>\n        <Grid>\n          <Row>\n            <Col>\n              <Avatar\n                image={members[0]?.user?.image}\n                name={members[0]?.user?.email}\n                size={24}\n              />\n            </Col>\n            <Col>\n              <p>{members[0]?.user?.email}</p>\n            </Col>\n          </Row>\n        </Grid>\n      </Dropdown.Item>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        onClick={() => {\n          console.log(channel);\n          setActiveChannel(channel);\n        }}\n      >\n        {type === \"team\" ? <ChannelPreview /> : <DirectPreview />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ChannelListPreview;\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar, useChatContext } from \"stream-chat-react\";\nimport WavePointIcon from \"@rsuite/icons/WavePoint\";\n// import \"./UserList.css\";\nimport styles from \"./UserList.module.css\";\n\nconst InviteIcon = () => (\n  <div style={{ marginLeft: \"2px\" }}>\n    <svg\n      width=\"28\"\n      height=\"28\"\n      viewBox=\"0 0 28 28\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14 0C6.26875 0 0 6.26875 0 14C0 21.7313 6.26875 28 14 28C21.7313 28 28 21.7313 28 14C28 6.26875 21.7313 0 14 0ZM21.1812 9.31875L12.4875 20.475C12.4187 20.5438 12.3062 20.6938 12.1687 20.6938C12.025 20.6938 11.9313 20.5938 11.85 20.5125C11.7688 20.4313 6.91875 15.7687 6.91875 15.7687L6.825 15.675C6.7875 15.6187 6.75625 15.55 6.75625 15.475C6.75625 15.4 6.7875 15.3312 6.825 15.275C6.85 15.25 6.86875 15.2313 6.89375 15.2C7.375 14.6938 8.35 13.6687 8.4125 13.6062C8.49375 13.525 8.5625 13.4187 8.7125 13.4187C8.86875 13.4187 8.96875 13.55 9.04375 13.625C9.11875 13.7 11.8562 16.3312 11.8562 16.3312L18.8125 7.39375C18.875 7.34375 18.95 7.30625 19.0312 7.30625C19.1125 7.30625 19.1875 7.3375 19.25 7.3875L21.1625 8.89375C21.2125 8.95625 21.2437 9.03125 21.2437 9.1125C21.25 9.19375 21.2188 9.2625 21.1812 9.31875Z\"\n        fill=\"#1D9D67\"\n      />\n    </svg>\n  </div>\n);\n\nconst ListContainer = ({ children }) => {\n  return (\n    <div className={styles.user_list__container}>\n      <div className={styles.user_list__header}>\n        <p>User</p>\n        <p>Invite</p>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst UserItem = ({ user, setSelectedUsers }) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    if (selected) {\n      setSelectedUsers((prevUsers) =>\n        prevUsers.filter((prevUser) => prevUser !== user.id)\n      );\n    } else {\n      setSelectedUsers((prevUsers) => [...prevUsers, user.id]);\n    }\n\n    setSelected((prevSelected) => !prevSelected);\n  };\n\n  return (\n    <div className={styles.user_item__wrapper} onClick={handleSelect}>\n      <div className={styles.user_item__name_wrapper}>\n        <Avatar\n          image={user.image}\n          name={user.rollnumber || user.email}\n          size={32}\n        />\n        <p className={styles.user_item__name}>\n          {user.rollnumber || user.email}\n        </p>\n      </div>\n      <div className={styles.user_item__selector}>\n        {selected ? (\n          <InviteIcon />\n        ) : (\n          <div className={styles.user_item__invite_empty} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst UserList = ({ setSelectedUsers }) => {\n  const { client } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers(\n          { id: { $ne: client.userID } },\n          { id: 1 },\n          { limit: 8 }\n        );\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n\n  if (error) {\n    return (\n      <ListContainer>\n        <div className={styles.user_list__message}>\n          Error loading, please refresh and try again.\n        </div>\n      </ListContainer>\n    );\n  }\n\n  if (listEmpty) {\n    return (\n      <ListContainer>\n        <div className={styles.user_list__message}>No users found.</div>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {loading ? (\n        <div className={styles.user_list__message}>Loading users...</div>\n      ) : (\n        users?.length &&\n        users?.map((user, i) => (\n          <UserItem\n            index={i}\n            key={user.id}\n            user={user}\n            setSelectedUsers={setSelectedUsers}\n          />\n        ))\n      )}\n    </ListContainer>\n  );\n};\n\nexport default UserList;\n","import React from \"react\";\nimport { Modal, Form, Button, Input } from \"rsuite\";\nimport UserList from \"../UserList/UserList\";\n\nconst Textarea = React.forwardRef((props, ref) => (\n  <Input {...props} as=\"textarea\" ref={ref} />\n));\n\nconst ChannelCreateEdit = (props) => {\n  return (\n    <Modal\n      open={props.newChannelOpen}\n      onClose={props.handleNewChannelClose}\n      size=\"xs\"\n    >\n      <Modal.Header>\n        <Modal.Title>New Channel</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          fluid\n          onChange={props.setChannelFormValue}\n          formValue={props.channelFormValue}\n        >\n          <Form.Group\n            controlId=\"name-9\"\n            onChange={props.channelNameChangeHandler}\n          >\n            <Form.ControlLabel>Channel Name</Form.ControlLabel>\n            <Form.Control name=\"channelname\" />\n            <Form.HelpText>Required</Form.HelpText>\n          </Form.Group>\n          <Form.Group\n            controlId=\"textarea-9\"\n            onChange={props.channelDescChangeHandler}\n          >\n            <Form.ControlLabel>Channel Description</Form.ControlLabel>\n            <Form.Control\n              rows={5}\n              name=\"channeldescription\"\n              accepter={Textarea}\n            />\n          </Form.Group>\n          <UserList setSelectedUsers={props.setSelectedUsers} />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.handleNewChannelSubmission} appearance=\"primary\">\n          Confirm\n        </Button>\n        <Button onClick={props.handleNewChannelClose} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ChannelCreateEdit;\n","import React, { useEffect, useState } from \"react\";\nimport { ChannelList, useChatContext } from \"stream-chat-react\";\nimport { Sidenav, Nav, Dropdown, Button, Row, Col } from \"rsuite\";\nimport DashboardIcon from \"@rsuite/icons/Dashboard\";\nimport ScatterIcon from \"@rsuite/icons/Scatter\";\nimport WavePointIcon from \"@rsuite/icons/WavePoint\";\n\nimport styles from \"./SideNavChannel.module.css\";\nimport ChannelListCustom from \"../ChannelListCustom/ChannelListCustom\";\nimport ChannelListPreview from \"../ChannelListPreview/ChannelListPreview\";\nimport ChannelCreate from \"../ChannelCreate/ChannelCreate\";\n\nconst customChannelTeamFilter = (channels) => {\n  return channels.filter((channel) => channel.type === \"team\");\n};\n\nconst customChannelMessagingFilter = (channels) => {\n  return channels.filter((channel) => channel.type === \"messaging\");\n};\n\nconst SideNavChannel = () => {\n  const [newChannelOpen, setNewChannelOpen] = useState(false);\n  const [channelFormValue, setChannelFormValue] = useState({\n    channelName: \"\",\n    channelDescription: \"\",\n  });\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  const userType = userInfo.usertype ? userInfo.usertype : \"student\";\n  const [channelSearchTerm, setChannelSearchTerm] = useState(\"\");\n  const [channelType, setChannelType] = useState(\"team\");\n\n  const { client, setActiveChannel } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || \"\"]);\n\n  const filters = { members: { $in: [client.userID] } };\n\n  const [query, setQuery] = useState(\"\");\n  const [teamChannels, setTeamChannels] = useState([]);\n  const [directChannels, setDirectChannels] = useState([]);\n\n  useEffect(() => {\n    if (!query) {\n      setTeamChannels([]);\n      setDirectChannels([]);\n    }\n  }, [query]);\n\n  const handleNewChannelClose = () => {\n    setNewChannelOpen(false);\n  };\n  const handleNewChannelSubmission = async () => {\n    try {\n      const { channelName, channelDescription } = channelFormValue;\n      if (channelName && channelDescription) {\n        try {\n          const newChannel = await client.channel(channelType, channelName, {\n            name: channelName,\n            description: channelDescription,\n            members: selectedUsers,\n          });\n          await newChannel.watch();\n          setSelectedUsers([client.userID]);\n          setActiveChannel(newChannel);\n        } catch (error) {\n          console.log(error);\n        }\n\n        setNewChannelOpen(false);\n\n        setChannelFormValue({\n          channelName: \"\",\n          channelDescription: \"\",\n        });\n\n        //rerender the channels\n      } else {\n        //show error message\n      }\n    } catch (error) {\n      //show error msg\n    }\n  };\n  const handleNewChannelOpenDirect = () => {\n    setNewChannelOpen(true);\n    setChannelType(\"messaging\");\n  };\n  const handleNewChannelOpenTeam = () => {\n    setNewChannelOpen(true);\n    setChannelType(\"team\");\n  };\n  const channelNameChangeHandler = (e) => {\n    setChannelFormValue({\n      ...channelFormValue,\n      channelName: e.target.value,\n    });\n  };\n  const channelDescChangeHandler = (e) => {\n    setChannelFormValue({\n      ...channelFormValue,\n      channelDescription: e.target.value,\n    });\n  };\n  const channelSearchInputHandler = (e) => {\n    setChannelSearchTerm(e);\n  };\n  const channelSearchHandler = async () => {\n    try {\n      const channelResponse = client.queryChannels({\n        type: \"team\",\n        name: { $autocomplete: channelSearchTerm },\n        members: { $in: [client.userID] },\n      });\n      const userResponse = client.queryUsers({\n        id: { $ne: client.userID },\n        name: { $autocomplete: channelSearchTerm },\n      });\n\n      const [channels, { users }] = await Promise.all([\n        channelResponse,\n        userResponse,\n      ]);\n\n      if (channels.length) setTeamChannels(channels);\n      if (users.length) setDirectChannels(users);\n    } catch (error) {\n      setQuery(\"\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Sidenav\n        defaultOpenKeys={[\"3\", \"4\"]}\n        activeKey=\"1\"\n        style={{ height: \"100%\" }}\n      >\n        <Sidenav.Body>\n          <Nav style={{ paddingTop: 10 }}>\n            <Nav.Item\n              eventKey=\"1\"\n              className={styles.channelListHead}\n              icon={<DashboardIcon />}\n            >\n              ConnectED\n            </Nav.Item>\n            <Row>\n              <Col lg={20}>\n                <Dropdown eventKey=\"3\" title=\"Channels\" icon={<ScatterIcon />}>\n                  <ChannelList\n                    filters={filters}\n                    channelRenderFilterFn={customChannelTeamFilter}\n                    List={(listProps) => (\n                      <ChannelListCustom {...listProps} type=\"team\" />\n                    )}\n                    Preview={(previewProps) => (\n                      <ChannelListPreview {...previewProps} type=\"team\" />\n                    )}\n                  />\n                </Dropdown>\n              </Col>\n              {(userType === \"admin\" || userType === \"teacher\") && (\n                <Col>\n                  <Button\n                    className={styles.addButton}\n                    onClick={handleNewChannelOpenTeam}\n                  >\n                    +\n                  </Button>\n                </Col>\n              )}\n            </Row>\n\n            <br />\n\n            <Row>\n              <Col lg={20}>\n                <Dropdown\n                  eventKey=\"4\"\n                  title=\"Direct Messages\"\n                  icon={<WavePointIcon />}\n                >\n                  <ChannelList\n                    filters={filters}\n                    channelRenderFilterFn={customChannelMessagingFilter}\n                    List={(listProps) => (\n                      <ChannelListCustom {...listProps} type=\"messaging\" />\n                    )}\n                    Preview={(previewProps) => (\n                      <ChannelListPreview {...previewProps} type=\"messaging\" />\n                    )}\n                  />\n                </Dropdown>\n              </Col>\n              <Col>\n                <Button\n                  className={styles.addButton}\n                  onClick={handleNewChannelOpenDirect}\n                >\n                  +\n                </Button>\n              </Col>\n            </Row>\n            <ChannelCreate\n              handleNewChannelClose={handleNewChannelClose}\n              handleNewChannelSubmission={handleNewChannelSubmission}\n              channelNameChangeHandler={channelNameChangeHandler}\n              channelDescChangeHandler={channelDescChangeHandler}\n              channelSearchInputHandler={channelSearchInputHandler}\n              channelSearchHandler={channelSearchHandler}\n              newChannelOpen={newChannelOpen}\n              channelFormValue={channelFormValue}\n              setSelectedUsers={setSelectedUsers}\n            />\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </React.Fragment>\n  );\n};\n\nexport default SideNavChannel;\n","import React from 'react';\nimport { MessageTeam, useMessageContext } from 'stream-chat-react';\n\n// import './TeamMessage.css';\n\nexport const TeamMessage = (props) => {\n  const { setPinsOpen } = props;\n\n  const {\n    handleOpenThread,\n    message,\n  } = useMessageContext();\n\n  const handleOpenThreadOverride = (event) => {\n    if (setPinsOpen) setPinsOpen(false);\n    handleOpenThread(event);\n  };\n\n  return (\n    <div className={message.isPinned ? 'pinned-message' : 'unpinned-message'}>\n      <MessageTeam {...props} message={message} handleOpenThread={handleOpenThreadOverride} />\n      {/** potentially add replies component here */}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Modal, Form, Button, Input } from \"rsuite\";\nimport UserList from \"../UserList/UserList\";\n\nconst Textarea = React.forwardRef((props, ref) => (\n  <Input {...props} as=\"textarea\" ref={ref} />\n));\n\nconst ChannelEdit = (props) => {\n  const { channelName = \"\", channelDescription = \"\" } = props;\n\n  return (\n    <Modal\n      open={props.newChannelOpen}\n      onClose={props.handleNewChannelClose}\n      size=\"xs\"\n    >\n      <Modal.Header>\n        <Modal.Title>Update Channel</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          fluid\n          onChange={props.setChannelFormValue}\n          formValue={props.channelFormValue}\n        >\n          <Form.Group\n            controlId=\"name-9\"\n            onChange={props.channelNameChangeHandler}\n          >\n            <Form.ControlLabel>Channel Name</Form.ControlLabel>\n            <Form.Control name=\"channelname\" placeholder={channelName} />\n            <Form.HelpText>Required</Form.HelpText>\n          </Form.Group>\n          <Form.Group\n            controlId=\"textarea-9\"\n            onChange={props.channelDescChangeHandler}\n          >\n            <Form.ControlLabel>Channel Description</Form.ControlLabel>\n            <Form.Control\n              rows={5}\n              name=\"channeldescription\"\n              accepter={Textarea}\n              placeholder={channelDescription}\n            />\n          </Form.Group>\n          <UserList setSelectedUsers={props.setSelectedUsers} />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.handleNewChannelSubmission} appearance=\"primary\">\n          Confirm\n        </Button>\n        <Button onClick={props.handleNewChannelClose} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ChannelEdit;\n","import React from \"react\";\nimport { Modal, Button } from \"rsuite\";\n\nimport styles from \"./LogoutModal.module.css\";\n\nconst LogoutModal = (props) => {\n  return (\n    <div className={styles.logout_modal}>\n      <Modal\n        open={props.logoutModalOpen}\n        onClose={props.handleLogoutClose}\n        size=\"xs\"\n      >\n        <Modal.Header>\n          <Modal.Title>Do you really want to logout?</Modal.Title>\n          <br />\n          <br />\n        </Modal.Header>\n        <Modal.Footer>\n          <Button onClick={props.handleLogoutSubmission} appearance=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={props.handleLogoutClose} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LogoutModal;\n","import React, { useState } from \"react\";\nimport {\n  MessageList,\n  MessageInput,\n  Thread,\n  Window,\n  useChannelActionContext,\n  Avatar,\n  useChannelStateContext,\n  useChatContext,\n} from \"stream-chat-react\";\nimport { Button } from \"rsuite\";\nimport OffRoundIcon from \"@rsuite/icons/OffRound\";\nimport EditIcon from \"@rsuite/icons/Edit\";\nimport { useDispatch } from \"react-redux\";\n\nimport ChannelEdit from \"../ChannelEdit/ChannelEdit\";\nimport styles from \"./ChannelInner.module.css\";\nimport LogoutModal from \"../LogoutModal/LogoutModal\";\nimport { USER_LOGOUT } from \"../../constants/userConstants\";\nexport const GiphyContext = React.createContext({});\n\nconst ChannelInner = () => {\n  const [giphyState, setGiphyState] = useState(false);\n  const { sendMessage } = useChannelActionContext();\n\n  const overrideSubmitHandler = (message) => {\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: message.parent?.id,\n      parent: message.parent,\n      text: message.text,\n    };\n\n    if (giphyState) {\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\n    }\n\n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return (\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\n      <div style={{ display: \"flex\", width: \"100%\" }}>\n        <Window>\n          <TeamChannelHeader />\n          <MessageList />\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\n        </Window>\n        <Thread />\n      </div>\n    </GiphyContext.Provider>\n  );\n};\n\nconst TeamChannelHeader = () => {\n  const { channel, watcher_count } = useChannelStateContext();\n  const { client } = useChatContext();\n\n  const [editChannelOpen, setEditChannelOpen] = useState(false);\n  const [channelFormValue, setChannelFormValue] = useState({\n    channelName: channel.data.name,\n    channelDescription: channel.data.description,\n  });\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || \"\"]);\n\n  const handleEditChannelOpen = () => {\n    setEditChannelOpen(true);\n  };\n  const handleEditChannelClose = () => {\n    setEditChannelOpen(false);\n  };\n  const channelNameChangeHandler = (e) => {\n    setChannelFormValue({\n      ...channelFormValue,\n      channelName: e.target.value,\n    });\n  };\n  const channelDescChangeHandler = (e) => {\n    setChannelFormValue({\n      ...channelFormValue,\n      channelDescription: e.target.value,\n    });\n  };\n\n  const handleNewChannelSubmission = async () => {\n    try {\n      const { channelName, channelDescription } = channelFormValue;\n      if (channelName && channelDescription) {\n        try {\n          await channel.update(\n            { name: channelName ? channelName : channel.data.name },\n            {\n              description: channelDescription\n                ? channelDescription\n                : channel.data.description,\n            }\n          );\n          if (selectedUsers.length) {\n            await channel.addMembers(selectedUsers);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        setEditChannelOpen(false);\n\n        setChannelFormValue({\n          channelName: \"\",\n          channelDescription: \"\",\n        });\n        //rerender the channels\n      } else {\n        //show error message\n      }\n    } catch (error) {\n      //show error msg\n    }\n  };\n\n  const MessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID\n    );\n    const additionalMembers = members.length - 3;\n\n    if (channel.type === \"messaging\") {\n      return (\n        <div>\n          {members.map(({ user }, i) => (\n            <div key={i} className={styles.team_channel_header__name_multi}>\n              <Avatar\n                image={user.image}\n                name={user.email || user.id}\n                size={32}\n              />\n              <p\n                className={`${styles.team_channel_header__name} ${styles.user}`}\n              >\n                {user.email || user.id} {\"   \"}\n              </p>\n              <span>\n                <EditIcon onClick={handleEditChannelOpen} />\n              </span>\n            </div>\n          ))}\n\n          {additionalMembers > 0 && (\n            <p className={`${styles.team_channel_header__name} ${styles.user}`}>\n              and {additionalMembers} more\n            </p>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <p className={`${styles.team_channel_header__name} ${styles.user}`}>\n          # {channel.data.name} {\"   \"}\n          <span>\n            <EditIcon onClick={handleEditChannelOpen} />\n          </span>\n        </p>\n      </div>\n    );\n  };\n\n  const getWatcherText = (watchers) => {\n    if (!watchers) return \"No users online\";\n    if (watchers === 1) return \"1 user online\";\n    return `${watchers} users online`;\n  };\n\n  const [logoutModalOpen, setLogoutModalOpen] = useState(false);\n\n  const handleLogoutOpen = () => {\n    setLogoutModalOpen(true);\n  };\n\n  const handleLogoutClose = () => {\n    setLogoutModalOpen(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleLogoutSubmission = () => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n    setLogoutModalOpen(false);\n    window.location.reload();\n  };\n\n  return (\n    <div\n      className={`${styles.team_channel_header__container} ${styles.team_channel_header__channel_wrapper}`}\n    >\n      <MessagingHeader />\n      <div className={styles.team_channel_header__right}>\n        <span className={styles.watcher_count}>\n          {getWatcherText(watcher_count)}\n        </span>\n        <span>\n          <Button onClick={handleLogoutOpen}>\n            {\" \"}\n            Logout\n            <OffRoundIcon />\n          </Button>\n        </span>\n      </div>\n      <LogoutModal\n        logoutModalOpen={logoutModalOpen}\n        handleLogoutClose={handleLogoutClose}\n        handleLogoutSubmission={handleLogoutSubmission}\n      />\n      <ChannelEdit\n        handleNewChannelClose={handleEditChannelClose}\n        handleNewChannelSubmission={handleNewChannelSubmission}\n        channelNameChangeHandler={channelNameChangeHandler}\n        channelDescChangeHandler={channelDescChangeHandler}\n        newChannelOpen={editChannelOpen}\n        channelFormValue={channelFormValue}\n        setSelectedUsers={setSelectedUsers}\n        channelName={channel.data.name}\n        channelDescription={channel.data.description}\n      />\n    </div>\n  );\n};\n\nexport default ChannelInner;\n","import React, { useState } from \"react\";\nimport { Channel, MessageTeam } from \"stream-chat-react\";\n\nimport { TeamMessage } from \"../TeamMessage/TeamMessage\";\n\nimport ChannelInner from \"../ChannelInner/ChannelInner\";\nimport styles from \"./ChannelContainer.module.css\";\n\nconst ChannelContainer = () => {\n  const [pinsOpen, setPinsOpen] = useState(false);\n\n  const EmptyState = () => (\n    <div className={styles.channel_empty__container}>\n      <p className={styles.channel_empty__first}>\n        This is the beginning of your chat history.\n      </p>\n      <p className={styles.channel_empty__second}>\n        Send messages, attachments, links, emojis, and more!\n      </p>\n    </div>\n  );\n\n  return (\n    <div className={styles.channel__container}>\n      <Channel\n        EmptyStateIndicator={EmptyState}\n        Message={(messageProps, i) => (\n          <TeamMessage key={i} {...messageProps} {...{ setPinsOpen }} />\n        )}\n      >\n        <ChannelInner />\n      </Channel>\n    </div>\n  );\n};\n\nexport default ChannelContainer;\n","import React from \"react\";\nimport { Row, Col } from \"rsuite\";\nimport { StreamChat } from \"stream-chat\";\nimport { Chat } from \"stream-chat-react\";\n\nimport SideNavChannel from \"../../../components/SideNavChannel/SideNavChannel\";\nimport styles from \"./TextChat.module.css\";\nimport ChannelContainer from \"../../../components/ChannelContainer/ChannelContainer\";\n\nconst apiKey = process.env.REACT_APP_STREAM_API_KEY;\nconst client = StreamChat.getInstance(apiKey);\nconst userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\nif (userInfo) {\n  const streamToken = userInfo.stream_token;\n  const firstname = userInfo.firstname ? userInfo.firstname : \"\";\n  const lastname = userInfo.lastname ? userInfo.lastname : \"\";\n  const rollnumber = userInfo.rollnumber ? userInfo.rollnumber : \"\";\n  if (streamToken) {\n    client.connectUser(\n      {\n        id: userInfo._id,\n        name: firstname + \" \" + lastname + \" \" + rollnumber,\n        fullName: firstname + \" \" + lastname + \" \" + rollnumber,\n        email: userInfo.email,\n        usertype: userInfo.usertype ? userInfo.usertype : \"\",\n        rollnumber: userInfo.rollnumber ? userInfo.rollnumber : \"\",\n        batch: userInfo.batch ? userInfo.batch : \"\",\n      },\n      streamToken\n    );\n  }\n}\n\nconst TextChat = () => {\n  return (\n    <Chat client={client} theme=\"team dark\">\n      <Col lg={5} className={`${styles.channels} ${styles.heightExpand}`}>\n        <SideNavChannel />\n      </Col>\n      <Col\n        lg={18}\n        className={`${styles.connectionMain} ${styles.heightExpand}`}\n      >\n        <Row className={styles.heightExpandChats}>\n          <ChannelContainer />\n        </Row>\n      </Col>\n    </Chat>\n  );\n};\n\nexport default TextChat;\n","import React from \"react\";\nimport styles from \"./About.module.css\";\nimport ThaparIcon from \"../../Auth/images/thapar_icon.jpg\";\n\nconst About = () => {\n  return (\n    <div class={`${styles.align}`}>\n      <div class={`${styles.grid}`}>\n        <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n        <br />\n        <br />\n        <div class={`${styles.form} ${styles.login}`}>\n          ConnectED is a college portal for universities for all internal\n          communications. Technologies used in Portal are React.js, Node.js,\n          MongoDB, StreamSDK.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport { Button, Input, Message } from \"rsuite\";\nimport TagLockIcon from \"@rsuite/icons/TagLock\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nimport styles from \"./Profile.module.css\";\nimport ThaparIcon from \"../../Auth/images/thapar_icon.jpg\";\n\nconst Profile = () => {\n  const userInfo = JSON.parse(useSelector((state) => state.userSlice.userInfo));\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorPresent, setErrorPresent] = useState(false);\n  const [successPresent, setSuccessPresent] = useState(true);\n\n  const [user, setUser] = useState({\n    password: \"\",\n    repassword: \"\",\n  });\n\n  const handleChangePass = (e) => {\n    setUser({\n      ...user,\n      password: e,\n    });\n  };\n  const handleChangeRePass = (e) => {\n    setUser({\n      ...user,\n      repassword: e,\n    });\n  };\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    setErrorPresent(false);\n    try {\n      const { password, repassword } = user;\n      if (password && repassword && password === repassword) {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          `${process.env.REACT_APP_SERVER_URL}/api/user/profile`,\n          { ...userInfo, password },\n          config\n        );\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        setSuccessPresent(false);\n      } else {\n        setErrorPresent(true);\n        setSuccessPresent(true);\n        if (password !== repassword) {\n          setErrorMessage(\"Password and Confirm Password must be same!\");\n        } else {\n          setErrorMessage(\"Incorrect Inputs!\");\n        }\n      }\n    } catch (error) {\n      const errorVal =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      setErrorMessage(errorVal);\n      setErrorPresent(true);\n      setSuccessPresent(true);\n    }\n  };\n\n  return (\n    <div class={`${styles.align}`}>\n      <div class={`${styles.grid}`}>\n        <img src={ThaparIcon} alt=\"Icon\" className={styles.college_icon} />\n        <form\n          onSubmit={handleSubmission}\n          class={`${styles.form} ${styles.login}`}\n        >\n          <div class={styles.form__field}>\n            <label for={styles.login__password}>\n              <TagLockIcon />\n            </label>\n            <Input\n              id={styles.login__password}\n              type=\"password\"\n              name=\"password\"\n              class={styles.form__input}\n              placeholder=\"Change Password\"\n              onChange={handleChangePass}\n              required\n            />\n          </div>\n          <div class={styles.form__field}>\n            <label for={styles.login__password}>\n              <TagLockIcon />\n            </label>\n            <Input\n              id={styles.login__password}\n              type=\"password\"\n              name=\"repassword\"\n              class={styles.form__input}\n              placeholder=\"Confirm Changed Password\"\n              onChange={handleChangeRePass}\n              required\n            />\n          </div>\n          <div class={styles.form__field}>\n            <Button\n              color=\"blue\"\n              appearance=\"primary\"\n              className={styles.Login_btn}\n              type=\"submit\"\n            >\n              Update Password\n            </Button>\n          </div>\n        </form>\n        <br />\n        <Message showIcon type=\"error\" hidden={!errorPresent}>\n          {errorMessage}\n        </Message>\n        <Message showIcon type=\"success\" hidden={successPresent}>\n          Success!\n        </Message>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Grid, Row, Col } from \"rsuite\";\nimport { useSelector } from \"react-redux\";\n\nimport SideNavMain from \"../../../components/SideBarMain/SideNavMain\";\nimport styles from \"./AppGrid.module.css\";\nimport TextChat from \"../TextChat/TextChat\";\nimport About from \"../About/About\";\nimport Profile from \"../Profile/Profile\";\n\nconst AppGrid = () => {\n  const pageInfo = useSelector((state) => state.pageSlice.page);\n  return (\n    <Grid fluid className={styles.heightExpand}>\n      <Row className={styles.heightExpand}>\n        <Col lg={0.5} className={`${styles.sidemain} ${styles.heightExpand}`}>\n          <SideNavMain />\n        </Col>\n        {pageInfo === \"home\" && <TextChat />}\n        {pageInfo === \"about\" && <About />}\n        {pageInfo === \"profile\" && <Profile />}\n      </Row>\n    </Grid>\n  );\n};\n\nexport default AppGrid;\n","import { CustomProvider } from \"rsuite\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Login from \"./pages/Auth/Login\";\nimport Register from \"./pages/Auth/Register\";\nimport Request from \"./pages/Auth/Request\";\nimport AppGrid from \"./pages/App/AppGrid/AppGrid\";\nimport { userActions } from \"./store/userSlice\";\nimport { USER_LOGIN_SUCCESS } from \"./constants/userConstants\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"stream-chat-react/dist/css/index.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userSlice.userInfo);\n\n  useEffect(() => {\n    const userInfoStorage = localStorage.getItem(\"userInfo\");\n    if (userInfoStorage) {\n      dispatch(\n        userActions.userLogin({\n          type: USER_LOGIN_SUCCESS,\n          payload: userInfoStorage,\n        })\n      );\n    }\n  }, [dispatch]);\n\n  return (\n    <CustomProvider theme=\"dark\">\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={userInfo ? <AppGrid /> : <Login />}\n          ></Route>\n          <Route\n            exact\n            path=\"/home\"\n            element={userInfo ? <AppGrid /> : <Login />}\n          ></Route>\n          <Route\n            exact\n            path=\"/login\"\n            element={userInfo ? <AppGrid /> : <Login />}\n          ></Route>\n          <Route\n            path=\"/register\"\n            element={userInfo ? <AppGrid /> : <Register />}\n          ></Route>\n          <Route\n            path=\"/request\"\n            element={userInfo ? <AppGrid /> : <Request />}\n          ></Route>\n        </Routes>\n      </Router>\n    </CustomProvider>\n  );\n};\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst chatSlice = createSlice({\n  name: \"chatSlice\",\n  initialState: {\n    pinState: false,\n    isEditing: false,\n  },\n  reducers: {\n    togglePinState(state, action) {\n      state.pinState = action.payload.payload;\n    },\n    toggleEditState(state, action) {\n      state.isEditing = action.payload.payload;\n    },\n  },\n});\n\nexport const chatActions = chatSlice.actions;\nexport default chatSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport userSlice from \"./userSlice\";\nimport pageSlice from \"./pageSlice\";\nimport chatSlice from \"./chatSlice\";\n\nconst store = configureStore({\n  reducer: {\n    userSlice: userSlice.reducer,\n    pageSlice: pageSlice.reducer,\n    chatSlice: chatSlice.reducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}